{"pages":[],"posts":[{"title":"2016国庆概论","text":"9月30日，晚北站买火车票。 10月1日，托牛牛果果，晚北京站软卧－&gt;大连2日，大连地铁－&gt;30路公交-&gt;海之韵。开始走滨海栈道，其中大部分路电瓶＋打的。到傅家村，银沙滩，跨海大桥，绝美夕阳。星海广场。酒店被放鸽子，临时找如家，很棒。3日，与父母赌气，自己反走滨海大道，紧张完成。地铁汇合，乘火车返京，3人软卧包间，私密享受。4日，晨达家，爸出发四川，我与妈雨天下午4-6点驾车。教练慌得不行。5日，去延庆，对人数预估不足，北京北站堵大队，坐上11点出发的火车，1点多骑上自行车，风景超棒，流连忘返导致时间前松后紧，返程特别赶喽。30分钟涮肉于一品肥牛，狂奔火车抢座。抵京接牛果。6日7日，休息。","link":"/2016/10/08/2016-NationalDayFestival/"},{"title":"Day2 福州-厦门 20170201","text":"上午游西湖公园，下午于山，晚告别福州，动车抵达厦门。 西湖公园 于山风景 于山大隐隐于市！这座小山就在城市中。南门没有显著标识，就在马路边，乍看去就是围起来的一块小空地，然而有石梯向上通。经过老年活动区（小剧场）继续向上，就是宗教圣地，我也不大区分出是佛教还是道教，并没有拍照。继续前行就到比较高的部分了，基本全部是绿化风景，戚公祠也坐落于此。 告别福州 抵达厦门 时间比较早，在车站内的肯德基解决了晚饭。 END","link":"/2017/02/02/Fuzhou-Xiamen-20170201/"},{"title":"AVAssetExportSession-fail-to-overwrite","text":"先上结论： iOS应用在卸载之前，沙盒路径是不变的。 __AVFoundation__通过__AVAssetExportSession__写文件到沙盒中时，无法覆盖已有文件，会失败。 下面是心路历程。从昨天下午，App单机运行时有如下表现： 有概率会在[处理视频/存储视频/播放视频]这个过程中的某一步闪退，具体在哪一步当时还没有确定。 一旦闪退，以后重启App，必定在相似位置闪退。（猜测是在同一步，后来确认的确是。） Xcode连机运行，虽然也有概率在相似位置闪退，但下次运行就没问题了啊。🤔 首先想明白的是第3点。Xcode连机的每次运行，其实相当于覆盖安装一次App，所以和单机跑是有区别的（其实回过头来看这也是个线索，闪退一定和两者的区别有关）。 之后没有头绪，希望能尽量确定闪退的代码位置。Xcode连机时似乎不能不安装只重启App，单机运行不能打断点，log输出也看不到，那就只好把log显示到屏幕上，看显示到那一条时闪退。写到一个TextField里显示出来（只能显示最新一条）。经过多次在代码里挪动输出的位置，基本确定问题出在存储视频这一步。 那么，要存的文件肯定是好的，存储失败最大的可能就是，文件名已存在且覆盖失败？沙盒tmp文件夹路径格式是： /var/mobile/Containers/Data/Application/440E4599-DAFF-4B57-AD79-759248479F1B/tmp/ 我的文件名格式是A-B.mp4，A来自截取沙盒路径里的16进制部分，B是从0开始递增的整数，所以文件名是： 440E4599-DAFF-4B57-AD79-759248479F1B-0.mp4 之所以设计得这么简单，是因为我觉得既然每次运行，沙盒路径都不一样，那多次运行App的视频名称自然不可能相同，因此只需要加一个序号后缀，区分本次运行生成的文件们就行啦。（教训，还是不要偷懒，最好用NSDate等能保证自己唯一性的东西。）难道，其实沙盒路径是固定的？而连机调试时之所以每次运行显示沙盒路径都不一样，是因为重新安装的结果？？？经测试，果真，沙盒路径不会变。…… 之后看到自己写了却一点印象也没有的 assert(exporter.error == nil); 一定是闪退在这里啦，也是醉了。so，闪退流程：沙盒路径不变 -&gt; 视频文件重名 -&gt; 存储失败 -&gt; assert() -&gt; 闪退 最后一个问题，__AVAssetExportSession__真的无法覆盖已存在的同名文件吗？是的，官方讲解： The export will fail if you try to overwrite an existing file, or write a file outside of the application’s sandbox. It may also fail if: There is an incoming phone call Your application is in the background and another application starts playbackIn these situations, you should typically inform the user that the export failed, then allow the user to restart the export.","link":"/2016/08/04/AVAssetExportSession-fail-to-overwrite/"},{"title":"2018春节：顺其自然的北京周边游","text":"最终还是没能制订一个如去年一般紧凑高效的南方游。当然客观因素也有一些，如大姨身体不适于劳顿，我家小长安的车胎又于除夕夜被扎等等。这几天的周边游也算丰富，主要在开车（算下来大约一千公里），足迹到达天津，塘沽，密云，怀柔，亦庄。 2018年2月14日，坚持到了上班最后一天。作为最后一名离开公司的员工，郑重为玻璃大门上锁。（毕竟个人能力有别，与其让他们上班，不如放他们回家过年。） 15日除夕，擦玻璃，贴窗花，去超市买年夜饭所需食材。爸在厨房埋头苦干，目标是摆满一大桌。晚八点左右，我们准备到五环内禁放区外去放鞭炮，之后回家就着春晚吃饭过年。然而开出去几百米就看到仪表盘上的胎压报警：左前轮胎压仅余1.0，被扎了。教训：长期不用车，出发前一定要详细检查轮胎及周围地面情况！靠边停车，打电话给销售得知后备箱备胎处有全套换胎工具：小千斤顶，扳手，小撬棍。第一步是把小千斤顶支在车下主梁处，千斤顶用起来不太方便，和爸爸轮流趴在车边不停地拧了半个多小时？成功把左前轮抬起。幸好路过一位好心懂车路人，在旁边一直指导我们。第二步就是拧下固定车轮的5个螺母。之后安装备胎，放下千斤顶相对轻松。 除夕夜的关键词怎能只有备胎和千斤顶？？我们开TOGO按原计划去放了鞭炮，23点多到家。热热乎乎吃顿年夜饭，看看春晚，3点多才睡觉。 16日初一，目标是尽快补胎。打电话给各修理店都说要假期结束才营业。比较绝望地开着TOGO继续向北转着，最终十分幸运的，从一位店在温榆河边但已身在山东的修车师傅电话中得知，月福还营业（16:00下班）。开长安到月福大屯路店，235元补胎，师傅很利索，夸马牌轮胎好。内补，在胎内黏附一只蘑菇状的补丁。车修好心情十分舒畅，当晚去小汤山买鞭炮到昌平与大姨一家燃放。 17日初二过生日，去顺义姐姐家，把路虎&amp;长安和小床寄托在三姨夫那里。 18日初三，寄托果果&amp;牛牛在大兴亲亲宠物店，与大姨全家和三姨自驾去天津，买耳朵眼小吃。晚驶向塘沽，住于七天酒店，飞猪旅行优惠至大床100出头。 19日初四，塘沽的基建很壮观，一切都很大！塘沽东疆纪念公园。东南朝向真正辽阔的海面！可惜雾大，看不太远。下午在悦祥食府聚餐，上菜巨快！（刚点完，大家还没入坐，第一道已经端上来……）量足好吃。后返京。 20日初五，密云古北水镇，怀柔雁西湖，回顺义接路虎&amp;长安。 21日初六，接果果牛牛，亦庄河边游玩。补觉……","link":"/2018/02/21/2018-Spring-Festival/"},{"title":"福州游第一天 20170131","text":"30日下午，两家6人北京西站乘Z59次列车，今日10:45左右到达福州。今日行程：车站-&gt;如家，三坊七巷，夜游滨江。 列车中 &amp; 抵达 前往如家宾馆（五一北路） 三坊七巷 城市 夜游江滨 乘公交 K1直达 其他 END","link":"/2017/02/01/Fuzhou-20170131/"},{"title":"IDEs for Android on Mac 踩坑实录","text":"eclipse自行安装eclipse，除了配置SDK／NDK，还需配置ADT eclipse中离线安装ADT插件详细教程 志明同学指导：”有快捷方式图标的，都是android目录外的。” ⚠️ 注意！不要修改工程的ndk设置而要直接设置 eclipse -&gt; 偏好 C/C++ -&gt; Build -&gt; Environment + ‘NDK_ROOT’ 发现了以元素 ‘d:skin’ 开头的无效内容。此处不应含有子元素。sdk目录\\tools\\lib下的devices.xml替换掉出错的devices.xml，然后重新启动eclipse。 Android Studio (Recommended)用eclipse而不熟悉AndroidStudio的人，建议先读资料：名词概念辨析 Eclipse 的 Project 等同于Android Studio的 Module 。Eclipse 的 workspace 等同于Android Studio的 Project 。 以下两条分割线之间的内容，均摘录自文章在 Android Studio 2.2 中愉快地使用 C/C++ 使用 Android studio，你可以将 C 和 C++ 代码构建成 native library（即 .so 文件），然后打包到你的 APK 中。你的 Java 代码可以通过 Java Native Interface（JNI）调用 native library 库中的方法。 Android Studio 默认使用 CMake 编译原生库。由于已经有大量的代码使用了 ndk-build 来编译 native code，所以 Android Studio 同样也支持 ndk build。如果你想导入一个 ndk-build 库到你的 Android Studio 项目中，请参阅后文的 关联本地库与 Gradle 部分。然而，如果你创建了一个新的 native 库工程，你应该使用 CMake。 下载 NDK 和构建工具要编译和调试本地代码（native code），你需要下面的组件： The Android Native Development Kit (NDK): 让你能在 Android 上面使用 C 和 C++ 代码的工具集。 CMake: 外部构建工具。如果你准备只使用 ndk-build 的话，可以不使用它。 LLDB: Android Studio 上面调试本地代码的工具。 你可以使用 SDK Manager 来安装上述组件 打开一个项目，从菜单栏中选择 Tools &gt; Android &gt; SDK Manager。 点击 SDK Tools 选项卡。 勾选 LLDB，CMake 和 NDK。 点击 Apply，然后点击 OK。 当安装完成后，点击 Finish，然后点击 OK。 将 C/C++ 代码添加到现有的项目中如果你想将 native code 添加到一个现有的项目中，请按照下面的步骤操作： 创建新的 native source 文件，并将其添加到你的 Android Studio 项目中。如果你已经有了 native code，也可以跳过这一步。 创建一个 CMake 构建脚本。如果你已经有了一个 CMakeLists.txt 构建脚本，或者你想使用 ndk-build 然后有一个 Android.mk 构建脚本，也可以跳过这一步。 将你的 native library 与 Gradle 关联起来。Gradle 使用构建脚本将源码导入到你的 Android Studio 项目中，并且将你的 native library （也就是 .so 文件）打包到 APK 中。一旦你配置好了项目，你就可以在 Java 代码中，使用 JNI 框架开调用原生函数（native functions）。只需要点击 Run 按钮，就可以编译运行你的 APP 了。 创建新的 native source 文件请按照下面的方法来创建一个 cpp/ 目录和源文件（native source files）： 打开IDE左边的 Project 面板，选择 Project 视图。 找到你项目的 module &gt; src 目录，右键点击 main 目录，选择 New &gt; Directory。 输入目录的名字（比如 cpp），然后点击 OK。 右键点击刚才创建好的目录，选择 New &gt; C/C++ Source File。 输入文件名，比如 native-lib。 在 Type 菜单下拉选项中，选择源文件的扩展后缀名，比如 .cpp。 如果你也想创建一个头文件，点击 Create an associated header 选项框。 点击 OK。 Android Studio - import cocos2d project (FAILED)cocos2d自动创建的工程，proj.android本意是给eclipse使用的。好在Android Studio导入时能判断它是eclipse工程，并提示：将会拷贝新建自用的proj.android而不会覆盖。一路下一步就可以啦。 遇到第一个问题：Error: Your project contains C++ files but it is not using a supported native build system.Consider using CMake or ndk-build integration with the stable Android Gradle plugin: https://developer.android.com/studio/projects/add-native-code.htmlor use the experimental plugin: http://tools.android.com/tech-docs/new-build-system/gradle-experimental. Android Studio - create cocos2d project (FAILED)follow instruction Cocos command-line tool (这篇官方教程教授的是用命令行实现从建立工程到编译apk的整个过程) “python setup.py” in cocos2d root folder “cocos new _ -p com.MyCompany.MyGame -l cpp -d _“ “cocos compile -s _ -p android –android-studio [-m debug] –ap android-25” ［注意⚠️］ 命令里含有”–android-studio”，这是专门针对Android Studio进行编译。如果不运行这一步，原生C++代码无法运行。[link] “–ap android-version”是Android必需的 奇怪的是，我这里在version=25时成功，10,13,16等较低版本都报错：./platform/CCFileUtils.cpp:274: error: undefined reference to ‘atof’ 上面的第2,3步可能遇到的问题及解决如下，若涉及修改 ~/.bash_profile 的操作，之后都要执行 source ~/.bash_profile 来使设置生效。NDK_ROOT / ANDROID_SDK_ROOT / ANT_ROOT 无效~/.bash_profile 增加如下行 12export LC_ALL=en_US.UTF-8export LANG=en_US.UTF-8 123export NDK_ROOT=/Users/.../android-sdk-macosx/ndk-bundleexport ANDROID_SDK_ROOT=/Users/.../android-sdk-macosxexport ANT_ROOT=/Users/.../apache-ant-1.8.1/bin ［注意］ANT_ROOT__要指向/bin子目录，否则会报错：…/apache-ant-1.8.1/ant: No such file or directory__ Error: JAVA_HOME is not defined correctly.~/.bash_profile 增加 12export JAVA_HOME=$(/usr/libexec/java_home)export PATH=$JAVA_HOME/jre/bin:$PATH terminal出现类似下面语句，即表示成功。 BUILD SUCCESSFULTotal time: 15 secondsMove apk to _/bin/debug/androidBuild succeed. ‘Open existing Android Studio project’时卡在 building ‘proj.android-studio’ gradle project info打开该目录下gradle/wrapper/gradle-wrapper.properties，最后一行 1distributionUrl=https\\://services.gradle.org/distributions/gradle-版本号-all.zip 原因：正在下载相应版本的gradle，然而被墙卡住。 最好方法：通过VPN让它自己下下来。 方法二：手动下载相应版本的gradle-版本号-all.zip，不解压置于/Users/username/.gradle/wrapper/dists/相应版本号/一串乱码/ 目录下。 方法三（没办法的办法，并不总能奏效）：将版本号替换为本地已安装的gradle版本号，具体可从AndroidStudio设置中查到，或从/Users/username/.gradle/wrapper/dists/中查到。 最终，terminal中出现绿色”Build succeed.”字样，表示工程成功生成，用Android Studio import “/proj.android-studio” 即可。可以在真机运行HelloWorld，然而cpp部分并不在工程中，猜测可能是提前编译为.so文件，供Java调用，这仍不是我们想要的。 Cocos2d-x相关问题解决import com.loopj.android.http.AsyncHttpClient 回答贴链接解决方法：add jar ‘cocos2d-x\\cocos\\platform\\android\\java\\libs\\android-async-http-1.4.8.jar’相关知识 add jars和add external jars有什么区别？ android中导入第三方jar包的正确方式1，右键工程–&gt;Build path–&gt;java build path,2，选择libraries在右边的按钮中点击“Add Library”3，选择“User library”,点击“下一步”4，点击“User librarys”按钮在出现的界面中点击“New..”按钮,在弹出的界面中随便起一个名字，点击“确定”5，点击“Add jars”按钮选择第三方jar包，点击“确定”完成操作。这样的话该jar包会被一起打包到apk中，问题也就解决了 其他小问题解决记录How to delete a module in Android StudioFile -&gt; Project Structure, select a Module, click “minus” button. [link] 如何修改minSdkVersion在build.gradle文件中. [link] “unknowm skin name nexus_5”未知原因导致的AVD问题，直接在AVD manager里删除重建模拟器就解决了。","link":"/2017/01/15/IDEs-for-Android-on-mac/"},{"title":"Day3 Amoy 20170202","text":"上午：大同路，轮渡码头。下午：厦门大学，南普陀寺。 Morning Amoy! 大同路&amp;开元路 轮渡码头 旅馆西侧不远处的公交站旁，就有一所中学。 公交坐过站了，坐到终点站第一码头，好在可以不下车，又坐回来到轮渡码头站下车。穿过地下通道，来到大同路。 午饭如何解决是个问题，最终在开元路买了现剥的蛤蜊，找一家小吃摊位帮煮，手续费50元，他们5人吃，我要了一份厦门炒面(素面)。 会到马路对面的轮渡码头！风景超棒！阳光太强。 厦门大学 南普陀寺 逛到后来很饿，然而距离晚饭时间还很久，食堂是否会开也问不到确切答案。爸妈在超市买了水果吃，我选择可乐。芙蓉隧道是个挺火的景点，站在外面只看到墙壁上都是涂鸦，洞口牌子上写隧道是作教学之用，不知用来教什么？ 山地，水系，各式古风建筑，一座临海球场。厦门大学是我心目中的最美大学。 南普陀寺，没有仔细逛，游览了几个主要的殿，并没有继续上山。准备打道回府，然而公交半天找不到哪里做，最终打的，竟然比较快就回到宾馆了。 晚 晚上不想在宾馆呆着，查查附近有没有夜晚可溜达的街，按推荐打算去禾祥路。然而到实地发现只是普通的一条街，较冷清。去沃尔玛买了些吃的，晚饭在宾馆附近的兰州牛肉拉面馆解决了……","link":"/2017/02/02/Xiamen-20170202/"},{"title":"Day4 厦门 白鹭洲-鼓浪屿-步行街 20170203","text":"上午：白鹭洲午饭：步行街必胜客下午：鼓浪屿晚：中山路小吃 第一码头 其实一大早我们先去了轮渡码头，因为听说去鼓浪屿的船票不好买。在那里了解了半天才搞清楚情况：厦门市民和其他人是区别对待的。厦门市民可以在轮渡码头直接花8元坐船到鼓浪屿，而游客要去第一码头或者更远的一个地方乘船（从鼓浪屿回来也是，厦门市民有一个专属码头）。从第一码头去，还需要先去一个更远的岛：嵩屿，然而票价只有2元。嵩屿-&gt;鼓浪屿30元…… 白鹭洲上午还有时间，打算先去一个地方玩。听到白鹭洲这个名字后，妈妈立刻很感兴趣，因为那应该就是费玉清歌词里出现过的那个叫白鹭洲的地方吧！于是众人打车前往。白鹭洲是一个岛上公园。 轮渡 轮渡是双层船，写着额定载客量640人之多。 鼓浪屿 步行街 美食街 天黑时分，胜利大逃亡一般从人山人海的鼓浪屿码头坐轮渡回到厦门岛。再回望鼓浪屿，真想不到那个看起来不大的地方，竟然有那么多内容，而且妈妈说我们才游玩了很小一部分。 城市 拍了一张白天的，一张夜景。（今早才发现，BRT高架桥上行驶的的确是巴士！BRT = Bus Rapit Transmit） 趣图 ![妈妈拍的，于嵩屿]https://raw.githubusercontent.com/veslam/blog/master/res/20170203_21_Xiamen.png)END","link":"/2017/02/03/Xiamen-20170203/"},{"title":"2016国庆记之大连二日游","text":"本科毕业旅行去的就是大连，那里沿海的美景令我印象深刻，因此极力向爸妈推荐大连作为外地旅行的首选。十一在也不必须回老家，决定出行。然而9.30的火车票一个月前就抢光，因而计划错峰，10.1晚卧铺去，2~3号游玩，10.3晚卧铺回京。 出发前两天抢票结果并不乐观，妈妈一怒之下决定软卧往返，好不容易出去玩一玩，就要任性一把。30号晚上在北京北站买了返程票，因为可以选席别。 10.1 下午去东兴寄托了牛牛和果果，当晚北京站坐上软卧。 10.2出大连站不远就是友好广场，地铁站不太好找。在旁边的麦当劳略吃早餐，在便利店买点补给，出发！ 好不容易爬上十八弯，经过栈道起点，面朝大海却看不见。—— 因为雾气太大了。妈妈说既然看不了景，后面这段山路也差不多，就别把时间耗在走路上了，于是坐电瓶车快进了一段，下山来到棒槌岛公园。棒槌岛所在的海边，本身距离公园门口也挺远。往公园门口返程的时候，有幸拦到一辆空的士。实在是劳累的我们，索性直接让师傅带我们去傅家庄了，途径了北大桥（名意为 北海道-大连 友谊之桥），老虎滩那艘军舰。 傅家庄挺热闹，在一家小饭馆吃了顿并不怎么好吃却挺贵的饭。到海边看一看。 之后继续延栈道路线步行，途径银沙滩。⬆️在这里中途走错了一段路，本来应该从下面钻过桥洞翻上来继续走的，然而我们在下面直走了，穿过了一座钢结构人行桥，桥的地板也是铺木栈道相同的材料。走到桥那一头，才发现是通进莲花山隧道的。尽管走错了，收获是拍到了很美的景色。 这个红色跑道曾经是一整圈，然而修建隧道已经破坏了部分山体，把它打断成了C形。记得当时还有一个木亭子供人歇息，如今得在乱石间欣赏美景啦。 继续前进，距离栈道西侧的终点已经不远了。太阳落山后，天完全黑下来之前的景色也是很棒！ 手机撑了一天快没电了，记得booking预订的规定最晚入住时间是19点，时间不多了，拿pad给手机拍个照，加速赶路。最终抵达了星海广场，心想着打个电话先确认一下吧，然而令人气愤的是，对方以早已不和booking合作为由，说房已订满，无法入住，原因也在于我没有提前电话确认。被酒店放鸽子，在附近转了转，没有发现可以入住的地方。妈妈说，那干脆不非得住附近了，打个电话问问连锁酒店哪里有位置吧。查到了如家，幸运的是尽管星海店没有空位，附近的西安路店是可以入住的。从会展中心坐地铁到西安路站。入住宾馆，终于可以休息一下啦，如家很不错！服务态度好，房间也干净美观。然而附近的饭馆都已关门，听说两站地外有沃尔玛，于是3人去采购食物回来解决。 10.3又坐地铁回到星海广场，目的地星海公园。后来分头行动了，我想重走滨海栈道，爸妈想游玩市内。先放他们的照片！ 我这边费劲千辛万苦，耗时5小时出头，终于走完了全程，Maverick应用显示路线全长27.4公里，这应该还没算上占全程绝大部分的上下爬坡位移，比平地累很多。之前以为滨海栈道只有西/中/东3段，然而其实还有北段…… 刚开始走中段就开始脚疼，途经老虎滩海洋公园门口的时候，双脚已十分酸痛，坚持不能停。终于没有放弃。要是事先知道有这么长，敢不敢上路还不敢说。","link":"/2016/11/27/National-day-Dalian-2016/"},{"title":"another-two-day-weekend","text":"经过不到两天的努力，把新家建在了这里。(目前有效期至2017-07-21，应该会续XD) 为什么要从我的Lofter搬过来呢？并不是Lofter不好用，而是自己搭博客，所带来的无限的扩展可能性和想象空间，实在是太令我神往。网上的Hexo+github+Disqus建博客教程真不少，跟着它们，虽说还是会有磕磕绊绊，但全程下来不算很有难度，而回想“自己搭一个个人主页“这个动机停留在想法层面已有3年以上，只好再一次自嘲一下执行力过低。 当然也有其他动力，比如一直羡慕有自己的博客的人，觉得他们很厉害，再有就是总有那么一点小担心，怕自己辛辛苦苦给你给你干了大半年的那些文字一下子灰飞烟灭。（比如X度突然关了空间，把日志都转到个人云盘里，虽然之前我把大部分备份到了Lofter，但那些设为私密的日志没办法搬。如今Lofter支持随时导出为文件，风险小了很多。） 希望以此为契机，好好装修这里，打各种标签，好好记录生活。 p.s. 最爽的事情之一，就是周五晚健身后冲个温水澡，然后回家吹空调。 健身数据：10kmh跑不到20min就不行了…… 仰卧起坐35*3+20。","link":"/2016/07/22/another-two-day-weekend/"},{"title":"计算几何入门","text":"公司每周举办技术沙龙，我惆怅了许久演讲主题，最终选定__计算几何__。研究生时期旁听了邓老师开设的这门课程，体验到思考的乐趣。惊喜的发现，学堂在线有邓老师的计算几何课程，有讲义和视频。已经与去教室听讲几乎无异啦。于是演讲前两天刷了刷，温习了__Convex Hull(凸包)的生成算法和Voronoi Diagram__的基本知识，现学现卖😁 把链接和参考资料记录在这里 邓老师《计算几何》课程 - 学堂在线邓老师的电子讲义电子阅读版（全幅） 打印版（八拼）Demo演示（需要使用支持Java Applet的旧版浏览器） Mesh – A Processing Library ⬆️最后一个链接是一个小巧的Processing库，提供生成从平面点集生成凸包／Voronoi图的功能。Processing确实是快速做演示的好工具，把我用Mesh库做的两个小Demo放上来。 接受鼠标点击，生成当前点集的凸包。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182import megamu.mesh.*;int arraySize = 64, numOfPoints = 0;float[][] points = new float[arraySize][2];Hull myHull;static int pointRadius = 4;void setup() { size(640, 360); addPoint(120, 230); addPoint(150, 105); addPoint(320, 113); addPoint(250, 250); addPoint(240, 150); addPoint(200, 190); addPoint(236, 75); addPoint(310, 70); addPoint(373, 134); addPoint(193, 126); addPoint(269, 96); addPoint(301, 171); addPoint(258, 193); addPoint(285, 135); //rebuild();}void draw() { // show all points fill(0,255,0); for (int i = 0; i &lt; numOfPoints; i ++) { ellipse(points[i][0], points[i][1], pointRadius + 2, pointRadius + 2); } if (null != myHull) { // fill polygon MPolygon myRegion = myHull.getRegion(); fill(255,0,0, 20); myRegion.draw(this); // reshow extreme points int[] extrema = myHull.getExtrema(); fill(0,0,255); for (int i = 0; i &lt; extrema.length; i ++) { ellipse(points[extrema[i]][0], points[extrema[i]][1], pointRadius, pointRadius); } }}void mouseClicked() { //println(&quot;mousePosition (&quot;, mouseX, &quot;, &quot;, mouseY, &quot;)&quot;); addPoint(mouseX, mouseY); rebuild();}void addPoint(int x, int y) { points[numOfPoints][0] = x; points[numOfPoints][1] = y; // trick if (0 == numOfPoints) { for (int i = 0; i &lt; arraySize; i ++) { points[i][0] = x; points[i][1] = y; } } numOfPoints ++;}void keyPressed() { rebuild();} void rebuild() { myHull = new Hull( points );} 接受鼠标点击，生成当前点集的Voronoi Diagram。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101import megamu.mesh.*;float[][] points;Voronoi myVoronoi;static int pointRadius = 4;void setup() { size(640, 360); addPoint(120, 230); addPoint(150, 105); addPoint(320, 113); addPoint(250, 250); addPoint(240, 150); addPoint(200, 190); addPoint(236, 75); addPoint(310, 70); addPoint(373, 134); addPoint(193, 126); addPoint(269, 96); addPoint(301, 171); addPoint(258, 193); addPoint(285, 135); //rebuild();}void draw() { // show all points fill(0,255,0); for (int i = 0; i &lt; points.length; i ++) { ellipse(points[i][0], points[i][1], pointRadius + 2, pointRadius + 2); } if (null != myVoronoi) { // fill polygon MPolygon[] myRegions = myVoronoi.getRegions(); for(int i=0; i&lt;myRegions.length; i++) { randomColorFill(); myRegions[i].draw(this); // draw this shape } float[][] myEdges = myVoronoi.getEdges(); for(int i=0; i&lt;myEdges.length; i++) { float startX = myEdges[i][0]; float startY = myEdges[i][1]; float endX = myEdges[i][2]; float endY = myEdges[i][3]; line( startX, startY, endX, endY ); } }}void mouseClicked() { //println(&quot;mousePosition (&quot;, mouseX, &quot;, &quot;, mouseY, &quot;)&quot;); addPoint(mouseX, mouseY); rebuild();}void addPoint(int x, int y) { int oldLength; if (null == points) { oldLength = 0; } else { oldLength = points.length; } float[][] newPoints = new float[oldLength + 1][2]; for (int i = 0; i &lt; oldLength; i ++) { newPoints[i][0] = points[i][0]; newPoints[i][1] = points[i][1]; } newPoints[oldLength][0] = x; newPoints[oldLength][1] = y; points = newPoints;}void keyPressed() { rebuild();} void rebuild() { myVoronoi = new Voronoi( points );}void randomColorFill() { fill(random(256), random(256), random(256), 20); return; // TODO: '''Generate a random hsl color.'''}","link":"/2016/11/19/a-bite-of-computational-geometry/"},{"title":"转载 在C++中子类继承和调用父类的构造函数方法","text":"不好意思，基本功不扎实。转载留存一份 :| 原文链接 构造方法用来初始化类的对象，与父类的其它成员不同，它不能被子类继承（子类可以继承父类所有的成员变量和成员方法，但不继承父类的构造方法）。因此，在创建子类对象时，为了初始化从父类继承来的数据成员，系统需要调用其父类的构造方法。如果没有显式的构造函数，编译器会给一个默认的构造函数，并且该默认的构造函数仅仅在没有显式地声明构造函数情况下创建。 构造原则如下： 如果子类没有定义构造方法，则调用父类的无参数的构造方法。 如果子类定义了构造方法，不论是无参数还是带参数，在创建子类的对象的时候,首先执行父类无参数的构造方法，然后执行自己的构造方法。 在创建子类对象时候，如果子类的构造函数没有显示调用父类的构造函数，则会调用父类的默认无参构造函数。 在创建子类对象时候，如果子类的构造函数没有显示调用父类的构造函数且父类自己提供了无参构造函数，则会调用父类自己的无参构造函数。 在创建子类对象时候，如果子类的构造函数没有显式调用父类的构造函数且父类只定义了自己的有参构造函数，则会出错（如果父类只有有参数的构造方法，则子类必须显示调用此带参构造方法）。 如果子类调用父类带参数的构造方法，需要用初始化父类成员对象的方式，比如： 1234567891011121314151617181920212223class animal{public: animal(int height, int weight) { cout&lt;&lt;&quot;animal construct&quot;&lt;&lt;endl; } … }; class fish:public animal { public: fish():animal(400,300) { cout&lt;&lt;&quot;fish construct&quot;&lt;&lt;endl; } … }; void main() { fish fh; } 在fish类的构造函数后，加一个冒号（:），然后加上父类的带参数的构造函数。这样，在子类的构造函数被调用时，系统就会去调用父类的带参数的构造函数去构造对象。这种初始化方式，还常用来对类中的常量（const）成员进行初始化，如下面的代码所示： 12345678class point { public: point():x(0),y(0) private: const int x; const int y; }; 当然，类中普通的成员变量也可以采取此种方式进行初始化，然而，这就没有必要了。","link":"/2016/09/01/c-subclass-constructor/"},{"title":"Build Static Library 包含libcocos.a with Xcode","text":"趟过N个坑，参考M个网页，千辛万苦Build成功。把遇到的issues记在这里供借鉴。 〇. 用Cocos2d-x源码编译libcocos.a参考网页[Tutorial] build cocos2d-x as a static library in Mac Xcode(这一步并不是必须的，如果你能下载到他人已编译好的.a文件也行。) 1. 建立Cocos环境Cocos源码可从官网得到，以terminal进入源码根目录，运行命令 1python setup.py 2. 建立新项目 首先，要開一個cocos2d的專案。到你下載並解壓好的cocos2d-x根目錄(例: /Users/YourName/Library/cocos2d-x-3.6)執行以下指令 1cocos new HelloWorld -p com.CompanyName.HelloWorld -l cpp 接著打開Xcode project檔。 1open HelloWorld/proj.ios_mac/HelloWorld.xcodeproj 3. 修改Build Settings 選擇cocos2d_libs.xcodeproj，再選擇Target: libcocos2d iOS，修改其Build Settings。應該預設值就是下面寫的值了，如果不是，請改為下面的值。 12Architectures =&gt; Standard architecturesBuild Active Architecture Only =&gt; No 另外在Valid Architectures 那欄追加兩個值: i386 和 x86_64。這是為了讓build出來的Library也可以在模擬器上跑。修改後的結果應該有五個值: arm64, armv7, armv7s, i386, x86_64完整結果如圖片所示: 4. 使用Rakefile來建立Static Library 12cd HelloWorld/cocos2d/buildvi Rakefile 內容輸入以下程式碼: 123456789101112131415161718192021222324PROJECT_PATH = &quot;./cocos2d_libs.xcodeproj&quot;TARGET_NAME=&quot;'libcocos2d iOS'&quot;OUTPUT_DEBUG=&quot;tmp/iphonesimulator&quot;OUTPUT_RELEASE=&quot;tmp/iphoneos&quot;OUTPUT_LIB=&quot;./lib&quot;directory OUTPUT_LIBdesc &quot;using lib command to build a static library&quot;task &quot;lib&quot; do sh &quot;xcodebuild -project #{PROJECT_PATH} -configuration Release -sdk iphonesimulator8.3 -target #{TARGET_NAME} -arch i386 -arch x86_64 TARGET_BUILD_DIR=#{OUTPUT_DEBUG} BUILT_PRODUCTS_DIR=#{OUTPUT_DEBUG} clean build&quot; sh &quot;xcodebuild -project #{PROJECT_PATH} -configuration Release -sdk iphoneos8.3 -target #{TARGET_NAME} -arch armv7 -arch armv7s -arch arm64 TARGET_BUILD_DIR=#{OUTPUT_RELEASE} BUILT_PRODUCTS_DIR=#{OUTPUT_RELEASE} clean build&quot;enddesc &quot;using lipo command to link static libraries for each device to one combined library file&quot;task &quot;lipo&quot; =&gt; OUTPUT_LIB do Dir.glob(&quot;#{OUTPUT_RELEASE}/*&quot;){|path| p path file = File.basename(path) sh &quot;lipo '#{OUTPUT_DEBUG}/#{file}' '#{OUTPUT_RELEASE}/#{file}' -create -output '#{OUTPUT_LIB}/#{file}'&quot; }end 注：iphonesimulator&amp;iphoneos中的版本号可能需要更新，否则有错误： SDK “iphonesimulator8.3” cannot be located 解决办法：参考利用xcodebuild命令确定SDK版本运行命令： 1xcodebuild -showsdks 查知两者版本号，相应修改Rakefile即可。 開始製作static library輸入以下command。 1rake lib 整個過程大概需要10~20分鐘，要看你的機器的執行速度。如果不到一分鐘就停了，那可能是有出現錯誤。像我是遇到找不到 iphonesimulator8.2 和 iphoneos8.2 這兩個資料夾，要改成你的執行環境正確的值。 完成build static library後，你會在tmp資料裡看到兩個libcocos2d iOS.a檔，一個是給實機device跑的，另一個是給模擬器跑的。因此我們還要再做最後一步，將這兩個.a檔打包成為一個merged的.a檔。執行下面的指令。 1rake lipo 這大概只需要幾秒鐘就能跑完，跑完之後你會看到一個lib資料。裡面有一個libcocos2d iOS.a檔，檔案大小約 117.9 MB。這就是最終我們要的static library檔了。 ** BUILD SUCCEEDED ** 开心😄 一. 在目标Xcode工程中加入libcocos.a这里的目标工程就是指你用来制作Static Library的工程啦。 1. Header Search Paths头文件方面，依旧使用Cocos源码目录下的.h文件们。添加如下目录，__切记不要recursive__，否则引起混乱。 12345678910111213&quot;.../cocos2d-x-3.x&quot;, （cocos根目录，请酌情修改。）&quot;.../cocos2d-x-3.x/cocos&quot;,&quot;.../cocos2d-x-3.x/cocos/base&quot;,&quot;.../cocos2d-x-3.x/cocos/physics&quot;,&quot;.../cocos2d-x-3.x/cocos/math&quot;,&quot;.../cocos2d-x-3.x/cocos/2d&quot;,&quot;.../cocos2d-x-3.x/cocos/ui&quot;,&quot;.../cocos2d-x-3.x/cocos/network&quot;,&quot;.../cocos2d-x-3.x/cocos/audio/include&quot;,&quot;.../cocos2d-x-3.x/cocos/editor-support&quot;,&quot;.../cocos2d-x-3.x/extensions&quot;,&quot;.../cocos2d-x-3.x/external&quot;,&quot;.../cocos2d-x-3.x/external/chipmunk/include/chipmunk&quot;, 2. Library Search Paths增加 libcocos.a 所在路径。 至此，幸运的话应该能编译通过了。然而我比较脸黑，还有各种小问题的骚扰，记录如下。 二. 其它部分Errors的解决- 找不到gl.h仔细看报错位置，发现是编译mac平台相关头文件时出现。因此猜测是工程文件设置不到位，导致Xcode尝试为mac平台编译。解决：Build Settings &gt; Apple LLVM 7.1 - Preprocessing &gt; Preprocessor Macros &gt; + following 1234USE_FILE32APICC_TARGET_OS_IPHONECOCOS2D_DEBUG=1 (Debug加)CC_ENABLE_CHIPMUNK_INTEGRATION=1 - MacTypes.h: Reference to ‘Point’ is ambiguous这个问题事实很简单：Cocos的Point类名与iOS冲突。然而解决费了我千辛万苦。最终找到标准答案ERROR: Reference to “Point” is ambiguous in MacTypes.h In short: Don’t let USING_NS_CC; be declared in any of your header files. Don’t include Foundation or UIKit in header. Move it into cpp. If you need to use a type from it, hide the implementation into a separate class. 简言之：不要在头文件中使用 USING_NS_CC（.cpp等可以） ，也不要引 Foundation 或 UIKit_，那我要在头文件中提到Cocos的变量怎么办呢？乖乖加上命名空间_cocos2d:: Why is “Point” ambiguous in MacTypes.h?There are two types of Point types, one defined in Cocos2d and other by iOS. The problem rises because the compiler detects references to Point type without specifying which one.The C++ way is to use a “namespace”, like cocos2d::Point.However, since it’s cumbersome to write the prefix each time, there is a convention to declare “I’m going to omit the cocos2d:: prefix in this scope. Just regard every Point here as cocos2d::Point.”. That’s the using namespace cocos2d line, or even more convenient, USING_NS_CC. This is causing the problem.If there is any file that declared using namespace cocos2d in a header file, then it gets mixed up during the long include chain. Hence, “you shouldn’t use USING_NS_CC in header files”. - ld: file is universal (3 slices) but does not contain a(n) armv7s slice: /file/location for architecture armv7s clang: error: linker command failed with exit code 1 (use -v to see invocation)File is universal (three slices), but it does not contain a(n) ARMv7-s slice error for static libraries on iOS, anyway to bypass? Alternatively, you can set the flag for your debug configuration’s “Build Active Architecture Only” to Yes. Leave the release configuration’s “Build Active Architecture Only” to No, just so you’ll get a reminder before releasing that you ought to upgrade any third-party libraries you’re using. - 编译出来的Static Library放到工程中使用，报错：Undefined symbols for architecture arm xxx参考两篇文章ios build时，Undefined symbols for architecture xxx问题的总结｜Undefined symbols for architecture arm64解决方案简而言之，苹果设备从老到新依次使用这四个指令集（_armv6、armv7、armv7s、arm64_），若想支持更多型号的苹果设备，就要支持更多指令集，编译出来的包体积也就越大。编译出来的.a的工程叫builder，使用.a的工程叫user，那么在支持的指令集方面，builder需要包含user，提供的才能用。那么久分别设置builder和user工程__Build Settings &gt; Architectures__相关，满足上述条件就行啦。 具体来说，影响Architectures的设置有二： _Architectures_与_Valid Architectures_的交集。前者基本必选_Standard Architectures_不用在意，后者自己决定选好，_Debug_和_Release_没必要不一样。 _Build Active Architectures Only_，大意是指只选择当前连接设备的指令集，显然不要这样。设置方法前面说过，_Release_为_No_，_Debug_可为_Yes_。 - “_SecCertificateCreateWithData”, referenced from:增加Security.framework - “_GCControllerDidDisconnectNotification”, referenced from:增加MediaPlayer.framework, GameController.framework - “_iconv_open”, referenced from:的解决方案添加动态库 libiconv.dylib（然而我没找到，加libiconv.tbd也可解决。） - “_CTFramesetterCreateWithAttributedString”, referenced from:增加CoreText.framework 就酱🤔","link":"/2016/09/15/build-static-library-including-libcocos-a-with-xcode/"},{"title":"Cocos2d[3.x]的Label-cc.Label与fnt制作","text":"备注：本文更新为lua版本，JS版本类名&amp;方法名基本一致。 参考链接：http://shahdza.blog.51cto.com/2410787/1560612http://blog.csdn.net/chinahaerbin/article/details/39994261 在Cocos2d[3.x]中，以cc.Label取代[2.x]版本中的cc.LabelTTF, cc.LabelBMFont, cc.LabelAtlas。转而统一通过cc.Label提供的方法创建：cc.Label:createWithSystemFont(), cc.Label:createWithBMFont(), cc.Label:createWithCharMap()。3种方法创建出的都是cc.Label，但可以视为实际创建出3种子类对象，后续支持的属性设置也不一样。 我目前常用LabelTTF和LabelBMFont，分别对两位的构造方法举例。 LabelTTF: 1234local labelTTF = cc.Label:createWithSystemFont('', 'Futura', 44) -- 内容，系统字体名，字号labelTTF:setString('sample text')labelTTF:setTextColor(cc.c4b(0,255,0,255))labelTTF:enableShadow(cc.c4b(0,0,0,255), cc.size(0, -2)) LabelBMFont: 1local labelBMFont = cc.Label:createWithBMFont('xxx.fnt', '') -- fnt路径，内容 不支持设置字号、颜色、阴影等，这些效果都应在fnt制作中完成。 如何制作fnt 一套fnt字体包括一个.fnt文件和一个.png文件，与_TexturePacker_导出的.plist+.png类似。.png存储的是字符图像集合，.fnt记录了每个字符切图在图片里的坐标，显示时的位置参数等。 字符集是可以自定义的，只包含数字，只包含字母等等都可以。 制作fnt字体的工具，Windows是Bitmap Font Generator。据此网址推荐，macOS可用Glyph Designer，确实十分强大易用。试用版导出会加水印，通常不能忍，所以这是一个原谅版。 Glyph Designer 简单教程 界面上方三个标签分别是：字体设计页面，效果预览，字符集选择页面。 先选择字符集（根据实际需要显示什么）比如只要数字,/,’ ‘，只要大小写英文 等等。选完返回设计页面，会看到字符范围已更新。 情况一：美术已给字符切图，直接从finder拖入即可。 预览页面选中 Show Guides显示参考线，通过xAdvance 调整X方向字符间缩进，Y方向位移。 导出。产出为 fnt + png。 情况二：（比较少见）需要自己根据已知系统字体直接制作。调整各参数即可。","link":"/2018/05/16/ccLabel-v3-and-fnt/"},{"title":"Wed Jul 27 2016 00:00:00 GMT+0800 (China Standard Time)","text":"预约好家旁边的宝力豪，出公司楼门时天气仍是闷热无风，两分钟后钻过地洞再上来，已是狂风骤起，飞沙走石…… 艰难冲到五道口地铁站，列车竟一直开门停在站里无法出发，估计是大风把线路或是道路干扰了？好在不久后恢复行驶，到家还算早。 健身数据：卧推首次70x8，仰卧起坐35x2，跑步10kmphx15+9kmphx10，要不是到关门时间了还能跑。 今日虾米推荐歌单质量非常之高，喜爱率得有90%以上吧！又是听了一整天😌","link":"/2016/07/28/day-2016-07-27/"},{"title":"几日小记","text":"周六早晨意外的很早就能爬起来，在早饭前弹了半小时琴，练到了《拜厄》91。一翻扉页，看到自己的字迹，记录买这本书，是三年前。练习曲92的难度上了一个台阶，听起来也更接近一首有内容的曲子，尽快练好它！ 晚上下班后，坐地铁到鼓楼，沿着鼓楼东大街寻找去年10月认识的那个琴行，这条老街其实很窄，南锣鼓巷北头又交汇于此，所以可想而知我其实又是穿梭在潮人的人潮里。记得那个琴行门脸挺小，然而里面不挤，还有一个小排练间，内有一套Roland KV-15，店家之一是一个年龄比我小的男生，打鼓超帅，solo的双踩让我热血沸腾。如今终于下决心腾出时间每周找他上课学鼓，却得知琴行早已经不干了……又一个错过时机的鲜活例子。 周日上午和爸爸妈妈去楼下健身乐园打乒乓，果果系着牵引绳，绳头系在围栏上，就在那里安静的坐着，虽然能看出来内心是想去飞奔的，但也不怎么闹，路人夸他好看&amp;可爱。牛牛刚由妈妈补了一针疫苗，就抱着不下地了。 easyicon.net 不错的icon素材网站。","link":"/2016/08/02/day-2016-08-02/"},{"title":"Tuesday ☀️ 2016-07-26","text":"7月22日周五是入职一周年，不知不觉就过去了。3个月@爱奇艺＋9个月@小小牛，两个完全不同的公司，都令我心怀感激。爱奇艺表现得正像一个“数千人的创业团队”，低龄化，有活力，邮件高效沟通，工位密集，不过缺点是午饭主要得靠外卖解决，以及我还有很多东西要学习，所以主要的工作是一些资料的调研，文档的总结，也处理了一些小需求。这3个月内我还得以出差去上海两次，主要是处理那个（因为还没上市所以不方便透露姓名的）大需求。到小小牛这边，氛围相对轻松，可能比较适合我这种松散的人😂。做回了程序，更如鱼得水一些，边学边干。产品的交互，逻辑的设计和实现等等，都会接触到，还有OC, LeanCloud, Audio/VideoPlayer, SNS分享等等，还算充实。 放几张上海之行的图吧！不知道下次去上海会是何时。 花了不到两周吧，读完了英文版的《三体》第一部，主要是用上下班地铁上的时间。这已经是第三遍读了（前两次读的中文版），还是有些已经忘掉的情节被捡回来。不过英文版后面多了一部分：[Author’s postscript for the American edition]，写得十分真诚动人。大刘回忆了自己经历的成长环境，以及那是如何影响到他的作品基调和风格的，仔细对比一下，这些东西都在作品中有所显现：航天，环境污染，文革。大刘发现自己的一个超能力，是可以真切的形象化的感知常人难以把握的尺度，从亿万光年到原子核，这也是他对尺度的比喻总是让我叹服的原因吧！下面这段话是我摘录出来的，供反思。 There’s a strange contradiction revealed by the naïveté and kindness demonstrated by humanity when faced with the universe: On Earth, humankind can step onto another continent, and without a thought destroy the kindred civilizations found there through warfare and disease. But when they gaze up at the stars, they turn sentimental and believe that if extraterrestrial intelligences exist, they must be civilizations bound by universal, noble, moral constraints, as if cherishing and loving different forms of life are parts of a self-evident universal code of conduct.I think it should be precisely the opposite: Let’s turn the kindness we show toward the stars to members of the human race on Earth and build up the trust and understanding between the different peoples and civilizations that make up humanity. But for the universe outside the solar system, we should be ever vigilant, and be ready to attribute the worst of intentions to any Others that might exist in space. For a fragile civilization like ours, this is without a doubt the most responsible path. Liu Cixin. 开始读《The Martian》，文风明显不同，是主角的第一人称口吻，挺活泼有趣的。分享一首单曲循环了一整天的歌：Lights-Archive.","link":"/2016/07/26/day-2016-07-26/"},{"title":"2016-08-04 周四","text":"此刻心情十分的惆怅！昨天下午开始，App表现出一个重大Bug，调试到很晚，从早晨就开始期待的3个礼拜以来首次踢球也泡汤了。好在晚上还是找到了一些线索，今天早上顺着思路很快就找到了问题，总而言之是个理解不到位＋实现时不细心的低级错误。去看看 今日ToDo：分享文字－LeanCloud自定义参数，视频快放导出接口。 明天去__国际虚拟现实产业博览会__值班，在老国展。小时候常去那里，周末时爸爸妈妈骑车带我去旁边的家乐福采购。儿时的记忆是模糊的，炙热的阳光，宽阔的柏油路，自行车道与汽车道是以绿化带隔开的，行道树是树叶茂密的白杨？还有记得一次加上姥姥共4人在对面的永和豆浆吃饭，两三小段油条卖几块钱，觉得很贵，妈妈回想起来，说姥姥那次应该没舍得吃饱。","link":"/2016/08/04/day-2016-08-04/"},{"title":"几日小记 160808-160811","text":"周一早晨的站立会上，CEO宣布了我司规范化的新举措，今后全部双休！( •̀∀•́ )代价是站立会提前到10点开始。其实对我没什么影响，10点也不算很早……平时来的也更早。单双休工作制（2016.01.16 ~ 2016.08.08） 关于家里的两只巴西龟，有个有趣的发现。背景介绍：他们是妈妈在我刚上初三的时候买来的，至今已有12年。他们的更多故事容我以后再述，因为他们是冷血动物，所以一直以来没让他们接触过热水，怕承受不住。如今他们呆在一个大的装有水的透明塑料整理箱内（比玻璃钢更大更轻便）放在卫生间。我每天晚上淋浴的时候是他们的放风时间，把他们拿出来放到卫生间地上，任其爬来爬去。但是我发现，他们似乎喜欢温暖。爬到淋浴热水喷洒到地上的那片区域时，他们会停下来安心趴着不动，闭着眼睛，很惬意的样子。还有一次，其中一只爬到我的脚面上，又是闭上眼睛开始休息。想想也是，他们太缺乏温暖了，野生龟还能享受日光浴！ 在转转上先后买到两副二手羽毛球拍，第一副红双喜虽然便宜，但难堪大用。第二副是yonex的，一支Nanospeed 8000，一支Ti-7 Titanium Mesh，100元加10元运费，超值！ 周三早上没有在家吃早饭，上班前还有时间来学校理个发。骑到独峰那里一看才不到9点，理发店9:30营业。无事可做，索性去西操场跑步吧！蓝色跑道，白色道线，天蓝色外场，双色绿草地，节奏感简直绝美。跑道弹性大跑起来很舒服，然而还是跑了5圈就得休息了_(:з」∠)__，一看时间，9:03～0:13，竟然只用10分钟？走一圈之后又坚持跑了5圈，大概用了15分钟。后来想想，之所以这么快可能是因为在紫操外圈练习的成果。p.s. 第一个理了发，路上买瓶可乐，一路猛骑争分夺秒及时赶到公司。跑步收效明显：连续3天中午一点都不困，鼻子上的黑头消减多了，还能激起一些久远的记忆。 拜厄的练习92对于我确实很难，基本每天都会练一点，现在弹下来一半了。 周四下午和Stan一起去了Face++，Astray师兄提供Hololens供体验。感觉很棒！优点如下： 感觉不到延时，准星／窗口实时朝向／平铺于平面。 对环境的建模很准。点击手势触发的网格化雷达效果十分酷炫！与实物基本贴合。 立体感觉很真实。其实虚拟三维物体的贴图和环境一点都不相似，色彩很鲜艳，但它的位置实在是太稳了，怎么晃头，它都在应该在的位置，就像固定在环境里一样。 手势识别灵敏，几乎没有未识别或误识别，点击、捏住拖拽、呼出主菜单手势自然。 略不爽点也有： 视角还是有点狭窄（但相对其它眼镜已经大多了） 戴头上觉得沉，易捂出汗，无法久戴。 发现原来双目的镜片都是四层，挺有趣，应该对呈像很有用。以及可以拍照和录像。我在空间上方放了一条大鲨鱼，又把视频播放放到了电视平面上，然后拍了个照片，可惜两种分享方式twitter/facebook都无效。 昨天下午做了个动效，自觉挺满意：按钮A：碰撞前 EaseBackIn (略后撤加速)，碰撞后原速返回 EaseBounceOut （刹车晃荡）按钮B：滚动就行 RotateBy","link":"/2016/08/12/day-2016-08-11/"},{"title":"周末小记 2016-08-14","text":"运动三场：周六早与妈妈打乒乓，周六晚健身房，周日早晨与四中同学打羽毛球。卧推新阶段：70x8，斜板仰卧起坐35 跑步9kmhx15+10kmhx5 都相对轻松不用停。周日6:30起床，8点－10点的场。因为体重增加了，敏捷程度下降了一截，网前小球挺多接不到的…… 周六晚根据douban推荐看了一部电影：一个叫欧维的男人决定去死 En man som heter Ove，还是很感人的，泪点不少。尽管剧情并不新颖，甚至能预料。瑞典好美啊！拜厄练习曲92终于弹得差不多了，衔接处容易记不住，得停下来想几秒。回头再看之前的曲子，有点小儿科。周日晚给家里台式机插上了8G内存，升级到了12G。硬盘也满了，还要买新的。 慢速画一张照片，定期上传最新状态。","link":"/2016/08/16/day-2016-08-14/"},{"title":"也就剩下周末小记了…… 2016-08-28","text":"果果的屁股好得比较顺利，当天和第二天把脓挤掉，等伤口结痂之后，情况就是单向的一直好转了。要感谢妈妈当夜睡得很少抱着果果安抚和看护，之后三天定期把消炎药胶囊的粉掺在食物里喂食给果果。红肿越来越小，现在基本已消退完毕。 周六晨于中财体育场，4:3力克烟草…… 踢了1/4左边卫+1/2中后+1/4后腰。踢边卫和后腰时完全没有位置感。许久没踢大场＋布鞋太软，全场下来累到不行，腿脚酸痛，这两天早晨起床下地需要缓缓才行。要买双皮制球鞋了。日光强烈把皮肤晒红，黑度++。步行来去的另一端都是13号线大钟寺站，秋风送爽，穿行的小区似乎还没醒来，清净的很，只遇到一位妈妈骑电动车送拎着乐器箱的孩子去上课。归途还有冰可乐相伴，好不惬意。 周日上午和高中同学以及二度同学在北兵马司胡同的一个桌游吧玩狼人杀。专业术语好多！我们玩的简直不是同一个游戏……虽然南锣鼓巷与北兵马司胡同相连，但如织的人潮却基本没有分流进来的，北兵马司胡同因而保持着宁静。中午大家在胡同里放开几张折叠桌椅板凳，吃外卖也感觉诗意起来了，就是胡同不够宽，汽车通过时还得把椅子撤走让路😂。 拜厄93弹了一半。 c++函数可变参数","link":"/2016/08/30/day-2016-08-28/"},{"title":"周末小记 2016-08-21","text":"周五下班后略过晚饭踢球，见到巷子&amp;乃哥等人。场地人满为患，正当踌躇无队可加之时，乃哥他们场因为人太多，决定踢4队轮换制，一球就下。和乃哥的新疆小伙伴们组队大杀四方，我打入首球，之后连胜5场，终止于我的后场头球乌龙…… 回到家后已经听说了羽毛球男双逆转夺冠的消息！幸运地坚持熬夜看了女子20公里竞走，切阳什姐能够从第二集团追回来真是厉害！后程一度出现三位中国选手围剿墨西哥选手的情景，解说也是信心满满地认为对手早晚垮掉。然而冈萨雷斯足够顽强，中国选手像三级火箭一样，依次掉队，最后只剩下刘红和她1v1，据说冈萨雷斯善于冲刺，此时二位解说已慌，对获胜的把握降到五成以下。然而刘红爆发了小宇宙，终点前几十米一个完美的加速超车卡位，锁定了金牌。能看到这种历史上都难得一见的比赛，运气好到爆。再算上早晨的女排的3:1逆转晋级（每局分差都为2）、李宗伟首克林丹，傅海峰张楠连得3分逆转夺冠……神奇的一天！ 周六上午照例和妈妈打乒乓，晚看着谌龙取胜李宗伟，修我本科的黑色笔记本电脑……这几天分别网购来了新的键盘、电池、内存、屏线，打算让他焕然一新，然而十分倒霉，劣质屏线把电路板烧了！估计是显卡？反正是开机键后面的那块区域。哎，日后再说…… 周日在健身房的拉力器上，从跑步机上的一排电视中目睹女排夺冠！太棒啦！！！女排足以让任何球队发怵。卧推依旧70x8，跑步9kmhx15+9.5kmhx5+10kmhx5。周日晚和高中同班同学聚会，就在家附近的一家井格涮肉，挺好吃的，就是略贵。之后去玩密室逃脱，这次玩的主题偏难，谜题需要多维线索结合来解开，还是挺有趣的！ 周日下午弹下来了《拜厄 92:民歌》，十分开心！还录了视频😁 点击观看，请多指教 XD 周日晚快睡觉的时候，发现果果屁股上肿起了一大块！有伤口，还在溃脓。外敷＋吃消炎药，给他铺了干净的大床（桌子），待会儿回家看看是否愈合了。","link":"/2016/08/22/day-2016-08-21/"},{"title":"2016-09-11 有生以来最懊悔的事之一 我伤害了牛牛","text":"距离牛牛受伤已经过5天，情况已在稳定好转中。终于有空闲记录下这让我永远无法原谅自己的事件。我把牛牛放在公共自行车车筐中，绳子拴在了车把上（真不应该）。牛牛在我骑过马路口时跳出车筐，荡到前轮，右后腿卷入车轮，胫骨粉碎性骨折，股骨头碎裂。 工体怡亚宠物医院-&gt;农大动物医院(实测渣渣)-&gt;东兴动物医院(钱粮胡同)医院很给力，尽管挺贵的。大夫赶在当天手术，十分感激！吸入式麻醉，很成功。内固定。 哎，还是没心情写，放一些照片吧。 牛牛早日好起来，好好对你一辈子。","link":"/2016/09/15/day-2016-09-11-i-hurt-NiuNiu/"},{"title":"周末大记(吉)😁","text":"什么曲子能同时被广场舞大妈和WOT集锦选中，老少咸宜雅俗共赏呢？答案就是《西班牙斗牛士》点击就送⬇️ 为什么叫大记呢？因为这个周末事情挺多。妈妈生病，咳嗽剧烈，周身发冷。但她还是坚持多动，希望会有助缓解病情，所以周六日晨各陪她打1小时乒乓。此刻已经好转啦！周六上午课后，拎着命途多舛的老戴尔笔记本去朝阳门的官方维修点。路不太好找，工作人员说机器被我拆散成这样，没法修。也能理解他们，不敢担责任吧。于是借来螺丝刀，当场拼装回整机，再给他们自己拆开修…… 当场测试了一下，才知道如果只是显示坏了，可以另接显示器使用。不过现在的问题已经不止于此，很可能是显卡坏了。3个工作日内会有答复，听说要是显卡(主板)坏了，可能得要小2000🙃 周六晚比较空闲，正好缺一双足球皮革鞋，和妈妈一咬牙，去法雅体育碰碰运气！天气不错，打算骑公共自行车。家旁只剩下两辆能取出来的公共自行车，其中一辆链子掉了，同来租车的一对小夫妻因此放弃。我和妈妈得以捡漏！我把链条上回去，出发！吹着夜风还是蛮爽的，只是我的车链条比较松，我减速停车时腿闲不住往回一倒腾，链子就掉了…… 一路上共三次。 阿迪的足球鞋明显比耐克的好看，而且更便宜，我很喜爱其中一款黑底的和一款纯红的。然而店员说没有大号的了，心里一凉。不懈努力的查找下，终于找到一双43的，觉得可能会小，穿上竟然还可以！虽然有点挤，但不顶脚。就是它啦！ 返程路过三里屯，21点多了，堵的不得了。骑到家体力耗损严重，吃海底捞外卖＋西瓜🍉。啊！最爽不过周六晚啊！ 周日晨打球后，买来711和争鲜的寿司，味道的确不错。711的椰蓉小面包也很好吃！ 下午午休失败，破粥时想起炉灶一边的打火旋钮按不下去了，于是打算修修。最后如愿拆开了炉灶，两个火眼的槽里堆积了许多黑炭状物体，是日积月累扑出来的粥饭……炉灶内部也是乱的不行，好多渣渣＋些许小强尸体。然而最终发现自己想修好是没戏了。目测右侧整个打火装置已经锈蚀了，是被流下去的食物液体侵蚀的。左侧之所以幸免是因为旋钮下方存在一个塑料密封环，阻挡液体流入，然而右侧的早已不见。于是修理炉灶的尝试最终实现为清理它。共耗时约两小时，热得我又冲了个澡。 《拜厄93:俄罗斯民歌》终于基本弹下来啦！希望下周末能录一段。 一周照片总结：就写到这里，还要总结一下周四听讲的收获，还有一堆衣服要洗……","link":"/2016/09/04/day-2016-09-04/"},{"title":"2016-09-15 中秋小记","text":"三天小长假，每日中午带牛牛去动物医院。恢复得顺利，输液转为打针转为口服用药。之后就可以放心在家监护啦！一两周后拍片子，两个月左右看情况去掉内固定。 从家步行去医院，途经了一条很长的原汁原味老北京胡同——东四四条。安静清凉的感觉自不必说，而且此胡同直顺，较宽敞，并无阴暗压抑之感。两侧多是院落人家，偶尔还有会所之类。我爸抱着果果（他累的有点喘），我抱着牛牛。途中一条黑色长毛狗狗被我们抱着的这俩吸引过来，跟着我们身后尾随了很久。估计它是谁家放出来放风的，怕它跟的太远，我们就跟它说：“回去，回去吧！”它好像听懂一般，蹲坐下来望着我们。不过后来又跟上来走了一段，之后调头了。胡同里的机动车也管理得不错，一条红色横幅上写“单向通行，单侧停放”云云，大家确实照做了，是个好规则。 看了名句“在座各位都是垃圾”的出处：《破坏之王》，星爷的冷幽默很合我胃口。五星推荐。依旧和妈妈打乒乓，妈妈说感觉身体逐渐灵活了，捡球更轻松，体力上来了。我能看出来确实是。 一天晚上，莫名哼出一小段好听的旋律，想来是陈老师的《下个星期去英国》，忽然很想学弹这首歌的吉他。于是就在兴趣驱动下，开始了吉他学习之路。先得查查吉他谱怎么看懂……后来通过弹琴吧找到了NancyGuitar的教学视频，弹得超棒！目前学会了C，FMajor7Sus2，Am7，D7这几个指法，也就是能磕磕绊绊弹下来第一段。以及，左手愈发有力了。 最近楼下出现一只棕白相间的小花狗，没日没夜守在三单元门口，看着电梯方向。毛发比较整洁，应该曾经有主。具体原因如何无法猜测，但基本能确定他的主人很久没有出现了，他一直在守候。楼里经过的人也很多，看到他都觉得可怜。每个早晨上班都看到他还在那里，两三天下来，面容都明显憔悴了。楼里的好心人还是蛮多，食盆狗粮枣糕什么的都见过给他摆在那里，我和妈妈也喂过它妙鲜包，吃得挺满足！再后来，狗狗似乎心宽了，开始在附近玩耍，最近偶尔能看到他和别的狗狗追逐着跑过。他应该有了自己规律的新作息了吧！祝愿他安好！快冬天了，还是让人担心啊。 近日情况 ~ 2016.09.20扇贝打卡压力太大，停在499天。小熊快跑还有1月左右到期，之后如何健身还须思考。","link":"/2016/09/26/day-2016-09-15-midautumn/"},{"title":"幸福的一天 2016-10-29","text":"数不清类似情感的日志有多少篇了，这恰恰说明我的生活比较美妙吧！ 有如下几件事：自行车健身卡我滴个神啊麦当劳二女那只曾经无主的狗狗 丢新山地后逐渐冷静下来，买车的策略变成了慢收。当然除了在各二手平台浏览，心里也惦记着一个地方，北新桥信托商行，就是买我这辆骑了8年多的二手自行车英雄的地方。然而周中营业时间我都在上班，周末和家人在一块儿，一直没去成。今天这个周六，趁着妈妈在讲课，我打算去看一趟。骑着轻便顺畅的红色公共自行车，很快到达。塑料条门帘陈旧得呈完全不透明深黄色，通过敞开的铝合金门和透亮的大玻璃窗才能确认店里是营业的。撩开门帘，直面小前台，左右各一间大屋子，左手的陈放着木制家具，瓷器等，右手则是排列满满一整间的自行车，超乎想象的多，可能上百辆。三五个店员分散坐着，一个都没有抬头，敞亮的阳光洒进来，十分惬意。两三个路人在逛着浏览商品。这群自行车，大部分都是黑色的老式大二八，威武有范儿。其余夹杂着一些山地车等。一看一辆大二八的价格，吓一跳，3280，莫非这里华丽转型走上了高端路线？又看了辆凤凰牌，1200+，再看一辆杂牌山地，1100，另一辆，260。看着看着，终于领悟了一个规律，就是这里自行车的价格完全没有规律！可能价格是原车主定的？谁知道呢，反正就是这么随机，这么任性，店员也不会有动机抬价或诱导，因为工资也不受影响。也就公家的店里才可能留存着这种情况吧。反过来，这对于我们消费者可是天堂啦，擦亮双眼，尽情捡漏！果然，我看到一辆与上高中时买的那辆车很相似的捷安特ATX，价格，420！简直喜出望外，这真是捡到了，早知道十年前的价格还是一千左右呢。最终顺利买下，骑到小街修车铺，配了一把30元的链条带锁，450搞定！骑在路上感觉很久很久没有体会到的轻灵顺畅，是辆好车！p.s.对于自己的两小点正确决策也很满意。1，看中它也没有急于出手，而是在附近找了找其他的店，希望货比三家。尽管与地图所示不同，走到平安大道也没发现第二家信托店，只有几个中年男子在露天售卖来路不明的各种山地车。2，买车需要配锁，店里的锁种类不多，好的四节锁要86，便宜的又不太可靠。于是一转念，不要着急，去别的修车店买吧，选择多些。后来的确如此，买到了如意的铁链锁。 健身卡是在转转买的，是家附近的浩沙健身，剩余近15个月不限次，1600，感觉很值，卖家也礼貌，芝麻信用比我还好。已拍下，估计周一晚上能拿到卡。工作之后面对面交易的难度大了许多，工作日基本没戏，早上太早，晚上太晚。之前看上的银座宝力豪健身年卡转让，就是从周中开始联系，结果周五晚上显示被第三者截胡了。希望这次交易顺利吧！ 下午躺在被窝里看『我滴个神啊』，最后看哭了……碾压绝大多数国产片。片长2个多小时，没有让人厌倦的部分。情节的确是一部分搞笑，一部分紧张，一部分放松，一部分冲突这样的结构，但衔接非常自然顺畅，没有韩剧一个模子出来的公式化的生硬感。画面配色和配乐优秀自不必说，我印象深刻的是有一处的配乐（女主验证PK真的有超能力并找到他）太棒，简直将感染力强化了n倍。更重要的是，这部印度电影是有内在的，真正的干货。它能够就一两个命题深入讨论，给出自己的价值观，至少肯定会引发观众的思考。比如这部电影讨论的是（部分）宗教可能是少数人假借神的名义，利用人们的希望，惧怕控制他们，达到自己私利的工具。它们相互矛盾，令人无所适从。这违背了宇宙中真正的神的初心。另一个问题尽管并不新鲜：如果心爱的她已经拥有爱情，那么是自顾自的爱她就说出口，还是永不再提。但电影对这个情节的深挖描写让我佩服。女主恍然，PK爱她，PK不仅选择了放手，而且在女主近乎责备的一再追问下，始终抑制着内心情感，平静的敷衍，见招拆招。这种近乎自虐的自制，相信会触碰许多有过相似情感经历者的泪点。PK真男人，这应该是最美的结局吧。PK终于学会了说谎，一个善意的大谎。影片还有许多硬实力值得好好学习，比如隐喻（外星人→孩子），通过一个大包袱自圆其说，前后呼应滴水不漏（分手信）。影片也肯定不是没有缺点，虽然我不懂，但有的地方也能看出来，比如五毛特效什么的。但这对于人家只是美中不足，多点时间和预算，修葺一下肯定解决。就像要做一个雕塑，内部骨骼已经搭好，泥塑外形也塑造的八九不离十，只需再打磨一下就好。反观国产各种神剧，还停留在逻辑不通，剧情狗血，堆砌面容，没有灵魂的阶段，令人唏嘘。希望新一代与世界接轨的国人影人早日站起来，我相信不会远。 明早很早就要出发，赶第一班地铁。晚上去买麦当劳作早饭。人不多，在我前面点餐的是两个女性，都有白头发了，一个微胖，白发只是夹杂在黑发中，另一个人较瘦高，年纪更大，头顶区域的头发从发根都开始白下来了，侵占着棕色烫发的领域。年长者正在付钱，年纪大了就不太麻利，好在我也不着急。她把几张五块十块的纸币摊在点餐台上凑着，点餐员比较耐心的重复了两次总额，后来直接拿起几张纸币帮她结了款。两人挺开心的走到取餐区等待。我也点了餐等待，餐号333。开始从背影看，我觉得她们是姐妹或者好友一起聚聚，后来我听年长者说“乐乐，给你买冰淇淋吃吧！”并开始询问店员。年轻的女子又比较听话的样子，两人的关系比较像母女。但两人的年龄相差应该至多2岁？我也不知道究竟是什么关系，但应该至少是亲属。她们也是打包回家，两人一人吃着一个甜筒离去，我也拿到我的餐。下楼梯的时候，年长者在后面，只能左腿直着先下，右脚跟上，这样一级一级的慢慢下台阶。走出玻璃门的时候，她礼貌的回身替我扶一下门，我报以微笑和谢意。之后我还和她们走了一段同样的路，听到两人慢慢的聊着，能感到她们属于生活不易的社会中层甚至偏下，手上的麦当劳是让她们的心情很不错。我也不知道为什么，很受触动。她们的乐观？不易？ 回到家楼栋内等电梯。看到了熟悉的小狗。对，就是那只一个月前趴在单元门口苦等主人的狗狗。他的命运很不错，见不到他之后的某一天，我发现一个男孩子牵着他在等电梯。当时一同等电梯的另一位邻居，还在向自己咿呀学语的孩子解释，说这个狗狗被好心人收养啦！很暖心。小男孩还不太好意思。今天一走进楼栋口，就看见他冲着我哼哼，牵着他的是一对中老年夫妇，很善良，想必是那个男孩的父母。女人说着今天喂了他零食和骨头，觉得有点多，所以没给他吃晚饭。那么他现在冲着我哼哼的主要原因，显然，是嗅到了我手中的汉堡包，而不是认出我曾经喂过他。这么看来，他的鼻子真灵！因为他在我走进来还没站定时就开始哼哼，空气中汉堡包分子的数目还很少。或者是麦当劳汉堡有什么独特的味觉添加剂？让他久久不能忘怀？没时间解释了，上电梯。这小狗真的很聪明，尽管会像果果一样变着声的祈求，但没有主人的允许，他会乖乖的坐在地上，嗯，很乖。 美好的一天终于记录完毕，手机打字基本没停，用时3小时…… 明天还要早起，晚安。","link":"/2016/10/30/day-2016-10-29/"},{"title":"近日照片记 2016-11-27","text":"","link":"/2016/11/27/day-2016-11-27/"},{"title":"2017新年好","text":"曾经有几次试图凭印象里的关键词，搜索到大学时架子鼓课程上接触到的外文教材名称，未果。然而，周六上午，在浏览移动硬盘的时候，惊喜发现老师当时发给我的教材展开照片，教材名字就在图像名称。于是搜索到了英文原名以及链接！保存在这里，等我快速干掉手头的3本教程，就考虑读它们。:D http://item.jd.com/10055820.html摇滚爵士鼓技法速成 [Rock solid drum patterns] https://www.amazon.com/Berklee-Practice-Method-Drum-Set/dp/0634006525[Berklee Practice Method: Drum Set] 新年目标 睡前躺下不玩手机 Reaing 150+ h 晨跑 100+ d 健身房 50+ 次 室内设计 一套表情 一首曲子","link":"/2016/12/29/day-2017-01-01/"},{"title":"2016-09-26 哎悲剧","text":"周六日似乎很完美！阿森纳3-0完胜切尔西，回母校踢球，体验了一把上帝视角。 10.24补充看到上文，半天没想起来待述什么。事情是这样：C男生曾经在几个男生吃饭小范围八卦时表露过对T女生的喜欢，然而过去一年多了，应该还没有说出口，恰逢前不久听到T吐槽自己依旧单身，我觉得他们俩都不错，就把C的喜欢告诉她的事情透露给T。不知道为什么搞得跟自己表白似的，十分紧张。T很吃惊。感觉“不太靠谱”，原因是“C从来没有单独跟我说过话。”事情过去一年多了，“应该是一时兴起把，过去啦过去啦。”掌握信息不对称的优势，并体验一下上帝视角，这种感觉不多见。然而如果无能为力，加倍无力。 从这个事情，也能体会出男女生对情感如何表达，以及如何理解对方表达，是有差异的。（当然也与性格有关。）具体分析下：T：1.喜欢应该直接，如果比如一直没说过话，那更可能是无感，而非太羞涩太理性等。2.太长时间没有行动，更能说明是一时兴起。C的表现：承认都费劲，不好意思表达。 另一件事也跟情感有关。妈妈刚知道我早就分手了，此后几分钟内她的表现变化挺有趣的。尽管她在掩饰，但失望还是表露出来，现象：1.同仇敌忾，怒斥薄情。2.偷偷观察我的情绪，是否低落？3.鼓励我去参加各种俱乐部交友，开始帮我搭配穿着，买衣服……略醉，可怜父母心。❤️ 然后，今天清晨睡梦中，梦到自己在骑车，骑的是白色旧的那辆，惊愕了一下。然后，早晨上班，发现新自行车不见了。蒙蒙细雨中等549，有些凄凉。（and so 第一次上班迟到。第二天早晨又去停车的地方看了看，彻底死心了： 话说，3D自行车丢了，是不是只能买2D的了。求购了两三天山地车，发现自己的定位还没太想好，应该是要买一个高档一点的山地，然而也不用着急。先骑回旧车吧！依旧给力。 10.24补充 话说后来还发生了件比较神奇的事情。9月14日吧，骑这辆旧车上班，过了中途那个红绿灯之后没走多远就发现后轮开始瘪，不妙，赶紧蹬两步，然而无济于事已经没气，只好把车锁路边树上，跑吧！不巧今天出门就晚，本来时间就紧。也不想那么多，抱着坚决不想迟到的信念，开始狂奔。当时雾霾还不重，目标虽远但不是毫无希望。跑啊跑啊，书包一直在后背上咣当，感觉心脏快跟不上了，不能停，不能停，停下来就不能再跑起来了。频繁的看一眼手机，看着时间从52，53，越来越接近10点。终于来到拐弯，钻过地洞，跑过树林，近楼冲上楼梯，在晨会开始的瞬间冲进公司…… T恤开始湿透。8分钟，当时只是觉得终于成功啦！一天咳嗽了好多次。 然而下班开始找车的时候，才发现自己跑了多远。沿着原路往回走，越走越奇怪，哎？怎么走这么远还找不到啊？错过了？不可能，被偷了？这也太点背了吧。心想着找不到就干脆走到地铁站吧，最后看到了车。一看马路对面，我去，这不美院吗？原来早上我用7分多钟跑了差不多整个园子的长度！有点庆幸早上开始跑的时候没有仔细确认下自己的方位，要不然可能直接放弃。","link":"/2016/09/26/day-2016-09-26/"},{"title":"一期一会","text":"当北京的朋友们为这场几近春分才迟来的降雪惊喜之时，身处太原的我并不觉得意外。它们只是安静地如约而至，沉静这世界。以及安抚这片公墓中，默默擦拭墓碑者的心。正如两年前的深夜，姥姥去世的噩耗骤然而至，清晨的火车窗外，茫茫白色平原上，稀疏的植被前赴后继地靠近又远离，而天空是无法看透的灰。 姥姥是个伟人，我知道。她对我们付出的爱，超出我所回馈的百倍，我知道。她那不可斗量的文学造诣已随她而去，我应永远无法企及。早应加倍反哺，让她安享快乐的晚年，却忙于生计一拖再拖。此罪永无悔改机会。 去程的中铺上，于黑暗中醒来再无困意，和姥姥在一起时的点滴情景依次浮现。至今没有一篇成文的回忆。 父亲来太原另一目的是植牙，周六晚，父母因方案与花费产生争吵。老姨以及以前表妹见到此情景必然惊慌紧张，然而在我看来程度只是较为激烈，可能是这些年什么大风大浪都见过吧。 周日陪父看牙，向医方索要书面治疗方案一再遭到推诿，见父躺在治疗椅上如鱼肉置于砧板，便只得强硬了一下，拿到了病例复印件，以及手写治疗材料清单。不知为何大夫在写“中外合资氧化锆-全瓷牙冠”中间迟疑了一会儿。 父继续治疗，我驱车沿滨河东路回家，告别老姨，还掉一嗨租车大众朗逸，与母赴南站。安检试图扣留我们忘在箱底许久赠于姥姥的水果刀。通行时距发车3分多钟，鞋中有异物强忍奔跑，冲关响铃后上车。乘务员们很热心。 抵京后未进家门，驱车大兴接牛牛，外固定情况很好，甚至可以略施力于右后腿站立！朱老板说每天带她遛弯，非常非常感谢仁医仁心的他和贾大夫。到家约23点半，父已先至，果果冲上来蹦跳迎接，两只幼犬却懂得自我保护，躲在屋里，见到是我们才奔来啃。家中无人两日一夜，水盆中的水已较浑浊，地砖更是几乎没有干净区域，除去几块尿垫上的作品，到处尿渍与分散各角落的便便，新旧干湿琳琅满目。换水，清理便便掸除垃圾，擦洗尿渍，投墩布数次。冲羊奶粉泡狗粮喂小狗，剪掉小狗屁股上的毛与黏着的便便。果果在此期间还情不自禁跳进我屋在木地板和底垫上各大尿一泡！被我教育两下。又擦了半天。最后，给牛牛的腿缠上纱布（防止自己啃）。2点睡觉。 姥姥，阿爷。谢谢您们赐予我力量，会继续努力的。 上周记录：银座宝力豪无法续租场地，停止营业，办理了退卡。原因是“商改企”政策。萨利亚&amp;宝力豪就这样离我而去。本周天气很棒，争取回校踢球。","link":"/2018/03/19/day-2018-03-18-no-more-time-no-more-chance/"},{"title":"本月杂记 2016-11-18","text":"平时总觉得有太多东西要记，然而面对键盘的时候，能想起来的却不多。尽量写下来交差吧！ 大概一个月前，我家的居民楼发生了一场小火灾，在凌晨3点的时候。我先是在迷糊中听到果果不停的朝着门口大叫，楼道有频繁的紧急的脚步声。妈妈大声叫醒了我，说可能着火了，你闻闻是不是有烟味？我立刻清醒了，仔细一闻真的是挺明显的。妈妈说刚才有好心人来敲了几下门。我赶忙穿上衣服，说先去看看情况。走到楼道，从窗向下望去，院子里已经聚集了不少跑出去的邻居，消防车的警灯闪烁着，但整个院子和楼还是比较平静的。我把头伸出窗外，试图确定着火的位置，看到在比较高的一层，从我正上方的窗户正冒出浓烟。综合判断，火情还在可控范围，对于我们低层住户不太紧急。回去告诉了妈妈，我们决定全家下楼看看情况。下楼来到单元门口，和已经在的几位邻居站到一起。秋天的深夜十分冻人，院子里站了几十号人，有的打着手电。时不时还有邻居从楼梯跑下来，穿着睡衣或简单套着外套。负责电梯的人赶紧关闭电梯，两位民警前来，向邻居们打听情况。得知应该是十四层着火。大家崇敬地看着消防员们，他们穿上厚实的消防服，有3位检查好对讲机，排着队跑步从另一个单元门口跑上了楼。目测楼里的消防供水系统已因年久无法使用，其他几位消防员打开了院子里的一个井盖，尝试使用里面的水管道。然而最后的用水还是来自于停在外面路边的消防车，管道拉进院子，从楼梯上了楼，真是够长的！雨水一滴滴落下，打在旁边地下室的顶棚上，噼里啪啦的。击打声越来越密，我过了十多秒才反应过来，这不是下雨，而是楼上正在救火的水喷洒下来！电梯间里也逐渐有水流下，声音不小，像个小瀑布一样。就这样，我们在雨中等待着，还见到了几位很久不见的邻居。我时不时把头伸出去看看火情的发展，未能看出什么，但感觉火情应该是在掌控之中。于是又等了一会儿就回家睡觉了。第二天出家门时，能看到各层各个电梯门处流出的水，面积还不小。十四层冒烟的窗户周围的墙已经全被熏黑了。听说失火是电热毯引起，那家住着两位老人，其中一位行动不便没逃出来……可惜。此外，院子里停着的那些机动车对救援有影响，至少导致消防车进不来，所以小区即将禁止机动车停放，院门也会改造，只开小门供人进出。我是相当支持的，因为机动车已经快把院子里停满了，希望这个规则能严格执行尽量久吧！ 购物相关十月买了两件东西，都挺满意的。一个是施耐德钢笔&amp;墨囊，另一个是硕华科无线耳机。上图：收到墨囊的时候我惊了，怎么这么小？不过笔还是很满意的！用着也很舒服。耳机是用来在地铁上用的，有线的比较麻烦，可能被扽掉。无线用起来确实方便！ 双十一买了几个大件：一个妈妈喜爱的多功能微波炉（能蒸，烤，甚至当消毒碗柜。。。），一台大金空气净化器（照着公司的买的），一个米狗运动相机（准备以后去延庆骑行用！），一个iPad mini4（活动价2500左右，感觉挺值的），小件更是数不过来，狗粮，狗窝，干果，奶制品，日用品等等。 给自己的捷安特买了一把玥玛锁，超沉！幸好又买了一个车后架，要不然都不知道放哪里。感觉有点奇怪，好像这个后架的作用就是挂车锁。。。现在觉得我的良驹超帅！图片有空再补！ 牛牛的腿又出了问题，二次骨折。外固定失败，重新内固定＋住院。说来话长了。 今天周五，非常渴望踢球！然而pm2.5 278。。。戴着口罩强行踢，到后面口罩里面湿的不怎么透气了。发挥还是很不错！灵活性还是有的。 最近循环的单曲：Synchronicity IV","link":"/2016/11/18/day-2016-11-18/"},{"title":"开始于iMac@work编辑发布博客","text":"做了两件事，一是把博客项目文件目录上传GoogleDrive同步，通过BackupAndSync应用；二是复制项目到在公司的iMac上并建立Hexo环境。以后就可以在这台设备上更新博客啦。 再次记录一下步骤： 安装Homerbrew1/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot; 通过 brew 安装 node1brew install node 可能需要以下命令初始化_npm_的package.json 1npm install --yes 通过 npm 安装 Hexo在博客项目文件目录中运行1npm install -g hexo-cli -O &amp;&amp; npm install -O 遇到不支持的node_module，卸载重装应即可。 最终， 1hexo config 看看域名、URL都符合自己的配置就对了。 最近两个感兴趣的网址 freecodecamp 在线任务型教程目前在看这个后端部分，AWS Cloud9远程终端很先进的感觉。 codepen.io 有git功能的前端源码项目集其中 Musical Chord Progression Arpeggiator是一个很有趣的参数化作曲工具，枚举了乐曲的调式、音高等不同属性。","link":"/2018/05/16/day-2018-05-16-access-to-Hexo-from-another-device/"},{"title":"2019新年-安排上了","text":"元旦去__#深圳__，已订住行。 越来越熟练^^","link":"/2018/12/23/day-2018-12-23/"},{"title":"day-2018-05-17","text":"完成freeCodeCamp上的第一节课：Manage Packages with npm","link":"/2018/05/17/day-2018-05-17/"},{"title":"Drums Playlist","text":"歌单 Dark Paradise - Lana Del Rey Summertime Sadness - Lana Del Rey (双踩)Summertime Sadness (Radio Mix)? 小步舞曲 - 陈绮贞 359° - Long Distance CallingNew Years End - God Is An Astronaut","link":"/2017/03/22/drums-playlist/"},{"title":"参与HackerRank竞赛WeekOfCode26","text":"Week of Code 26 平生第一次参加OJ竞赛，一周的比赛时间到北京时间今天下午16点截止，每天放出一道题，我也度过了充满激情的充实七天，工作日的晚上以及周六日的全天，基本都面对着笔记本，码代码或是思考如何码。HackerRank界面简洁，易用性很高，以及排名机制什么的成功激起了我做题的欲望。 最终成绩是 521 out of 6960虽然看起来还行，名列前10%，但考虑到分母里有很多新手或是抱着参与着玩玩的心态的人，其实成绩差强人意，距离榜首的各位满分更是差距一百多分。然而比赛的意义并不只是排名，就像高三刷题一样，每个题涉及一或多个关键的知识点。下面我会具体总结一下知识方面，确实学到蛮多。最后记录下首次参赛的体会心得。我的代码也会上传到GitHub，链接在这里。由于还有多道问题没有高效的解决，甚至没有解法，所以我会在找到尽量标准的答案后更新。 题目解析 Army Game很简单的送分题。先考虑X方向覆盖，需要数目为(列数/2)上取整，Y方向同理。两者独立，答案为两者乘积。 Best Divisor题意为，找_n_的约数中，各位数值相加最大的条件下，本身值最小的数。从小到大遍历所有约数，计算各位和并更新记录就行。有优化的可能？已知各位和，枚举数值？ Twins （从这题开始就有难度了，此后我就没得到过满分……）两个数被称为_Twins_，当满足2个条件：1) 均为质数 2) 值差为2。求[n, m]区间的_Twins_组数。大体思路较明确，第一步肯定要判断[n, m]区间每个数是否为质数，第二步遍历区间。感觉不可能直接从_n_判断起，所以我还是采用从_1_筛查到_m_的方法，创建bool数组_isPrime[m+1]_，如果检查到元素_i_，_isPrime[i]==True_，则_i_是质数，同时_isPrime[所有i的倍数]=False_。问题在于，所有i的倍数都要写一遍吗？答案是不用的。i x (1, 2, … k)其实分为两部分，i x (1, 2, … i-1) 和 i x (i, i+1, … k)，第一部分一定已经在之前的筛查中被标记过，所以只需对于第二部分标记就行啦。这就是Sieve of Eratosthenes算法。收获：标准答案里用i*i&lt;n而不是i&lt;sqrt(n)来限制i小于n的平方根。 Music on the Street换个方法描述题意就是，数轴被_n_个点分割为_n+1_个区间，拿一长度为m的线段贴合数轴，求线段起始位置，使得线段覆盖的所有区间（若部分覆盖则只算覆盖部分）的长度，都介于[Hmin, Hmax]情景想象出来了，也就得出了等价的判断方法。如图，绿色区间能放下线段即可。宽度小于Hmin的区间，情况简单，直接涂红。宽度大于Hmax的区间，绿色部分要从左右分别侵入Hmax长度，表示线段可以覆盖到这两部分。同理，绿色部分还要侵入最左侧点向左Hmax和最右侧点向右Hmax。 Satisfactory Pairs给定n，求Diophantine equation ax+by=n 有正数解的(a,b)组合数目。学到新定理： 二元一次丢番图方程有解 &lt;=&gt; n % gcd(a,b) == 0 若有解，记 d = gcd(a,b)，解的间距为(b/d, a/d)。然而判定1)不能保证解为正数，目前思路是在(x=0,y)附近（b/d, a/d）区域找是否有正数解。然而超时，感觉肯定有更好的方法。 Hard Homework给定n，x+y+z=n的前提下，sin(x)+sin(y)+sin(z)最大值？据说是动态规划。发现讲动态规划很好的帖子：什么是动态规划？动态规划的意义是什么？ - 回答作者: 徐凯强 Andy然而可能是我没有找到正确的状态定义，动态规划的复杂度并未降低，待解决。 Tastes Like Winning求满足下面条件的Nim Game先手获胜棋局总数：1) 各堆石子数各不相同，2) 堆最大石子数2^m。一篇很清晰的介绍 lecture 百度百科中摘录定理： P-position：面对者输 | N-position：面对者赢(1).无法进行任何移动的局面（也就是terminal position）是P-position；(2).可以移动到任意P-position的局面是N-position；(3).所有移动都导致N-position的局面是P-position。 (Bouton’s Theorem) 一个NimGame的局面(a1,a2,…,an)是P-position &lt;=&gt; a1^a2^…^an = 0不会做…… 目前找到的最相近的参考：POJ 2975 Nim 题解 最后是一点感想 理解问题并有一个解题思路只是最基本要求，高一些的要求是实现最佳算法，之后还要针对数据范围进行优化。 从分数来看，前面的几道题真不用纠结，加起来还没有后面多。 看自己名次的变化过程也是挺有趣的。HackerRange在题目放出一天后才用完整的TestCases测试，此前只要你把已放出的TestCases全部通过，就会暂时得到满分。这就会造就一个分数虚高的时间段，看起来很爽，我曾经到过129/6644？然而最后还是会被打回原形。Contest最终截止时间到后，还有一个最终名次的计算调整过程，我前进了大概160+，估计是一些人的虚高被挤掉了。。。","link":"/2016/12/05/entered-hackerrank-contest-weekofcode-26/"},{"title":"博客图片告别七牛移至GitHub","text":"从建立Hexo主页开始，就按前辈们的推荐使用七牛云作图片存储。平心而论体验算是令人满意，但傻瓜式操作也放纵了我的两个错误行为：1.图片名随机杂乱，2.图片没有保留其他备份。 七牛于今年7月多调整规则，测试域名有效期为3个月，到期后无法使用。而我在10月多收到通知短信才发现图片已无法加载，只道旧图们可能无法寻回，懊悔不已。 好在工单很快得到七牛工程师的回复，按步骤成功将旧图全部下载至本地。用几小时将图片规范命名，并上传GitHub，这样既有备份，又可直接使用其URL(raw/)作为图片外链。 现转帖步骤于此： 您好，1.您绑定自定义域名后可以继续使用 2.如果您没有域名，可以用下面方法下载有两种方式来获取文件： 2.1您需要先新建一个同区域存储空间，会分配一个新的测试域名到新空间。通过qshell batchcopy 到有域名的同区域空间然后再进行qdownload下载操作1）qshell listbucket 原bucket名 list.txt （list出全部文件，https://github.com/qiniu/qshell/blob/master/docs/listbucket.md）2）cat list.txt | awk ‘{print $1}’ &gt;list_final.txt （ 用awk获取list结果的第一列）3）qshell batchcopy 原bucket名 新bucket名 list_final.txt （复制到新bucket的文件和原bucket文件名一致，https://github.com/qiniu/qshell/blob/master/docs/batchcopy.md）4）qshell qdownload newfilelist.txt （newfilelist.txt为下载的配置文档，https://github.com/qiniu/qshell/blob/master/docs/qdownload.md） qshell安装包及文档请参考https://developer.qiniu.com/kodo/tools/1302/qshell如果您不熟悉命令行工具的安装使用，也可以结合文档最后提供的视频教程 https://developer.qiniu.com/kodo/tools/1302/qshell#9 2.2使用工具qrsctlhttps://developer.qiniu.com/kodo/tools/1300/qrsctlqrsctl get 每个步骤的参数设定在后面的链接内都有说明，注意qdownload步骤配置中的”cdn_domain”应设置为新的测试域名。","link":"/2018/11/07/export-from-Qiniu/"},{"title":"fleeting-weekend","text":"早上看到老板在群里分享的文章：16岁用计算器写游戏，55岁临终前启动「Pokemon GO」，42岁就成为任天堂社长的他，人生就是一个大写的程序员！原来他就是我一直崇拜的，在红白机时代用汇编语言写游戏的人。看到文章最后，公司总部上空出现彩虹，以及员工对天堂里的岩田聪真挚的告慰，我感动得流泪。文中通篇写的是他多么神，谈笑间樯橹灰飞烟灭，可能有意忽略了他也曾经经历的各种挫折和涅槃，尽管如此，通过他的眼睛能明显感觉到同龄人大多被消磨殆尽的乐观、真诚、热爱。 Hexo继续设置相关：看到建议增加social_icons知乎和豆瓣的图标，从而了解到fontAwesome，经测试，现在应该是仍未支持豆瓣、知乎等。困扰了两天的categories/tags/about页面无内容的问题，今天终于是解决了，可气的是主题制作者给出的相同解决方法，出现在了正常显示后的about页面里： 12345### Enable1. Rename `themes\\icarus\\_config.yml.example` to `themes\\icarus\\_config.yml`;2. Copy `themes\\icarus\\_config.yml.site.example` to your hexo blog's root directory and rename it to `_config.yml`;3. Copy `themes\\icarus\\_source\\*` into your hexo blog's directory `source`; # &lt;- This line.4. Then modify `theme` setting in `_config.yml` to `icarus`. 最后，依大家推荐，用七牛作图床。点我注册😛 名字听起来挺专业，其实可以理解为个人存图片的云盘（想存其他文件当然也行），上传后可以得到url用于贴到博客里。（图片如下，大概拍摄于两年前）","link":"/2016/07/24/fleeting-weekend/"},{"title":"小长安从廊坊迁入北京记录","text":"2017年末购车上的廊坊牌照，国V排放，没想到2年不到，就在 进京证限次 + 国V限迁(年底截止) 政策组合下不得不转入北京，惨遭一鱼两吃。 背景：廊坊牌照小客车，更换车主，转入北京，即租用北京燃油小客车指标上京牌。若城市不同、不更换车主，办理过程也可能不同。据悉随着国家“放管服”改革措施，目前已在大多数城市实现车辆转籍网上提档，通过交管12123App“机动车转籍申请”功能办理，不用开车回原籍，方便很多，但个人推测这个服务只适用于不更换车主的情况，并未研究。 小客车转入北京之（一）提档 办理前状态：小客车17年末购买，一手车全款，国五排放标准，上廊坊牌照。办理后状态：小客车在当地过户到新车主名下（双方签正式买卖合同），旧牌照收回并折断，得到廊坊临时牌照有效期30天，档案装在牛皮纸袋密封EMS邮寄到个人指定地址。办理地点：廊坊市杰成二手车市场。2019.08.06。在这里要特别赞一下工作人员办事专业高效态度好，现场办理人数还好不算拥挤，全程很顺利。全程用时：往返廊坊&lt;-&gt;北京各1小时车程，办理过程全程不到1小时，共3小时。总费用：二手交易税？400元+，验车、拆牌照、临牌共小几十元，一共450元左右。 1.二手交易需出示：双方身份证，绿本，全款发票等。文件交给工作人员复印，买卖双方分别手持身份证面对摄像头拍照。之后交税，领取二手交易合同填写，注意合同中的交易价格必须低于车的原价。双方签名按手印，将合同交给工作人员录入即可。 2.拆除号牌将车开到大厅后面排队进行拆牌，要先出示绿本等文件确认。之后打开发动机盖，师傅拓号，把条贴在风挡玻璃上。牌照螺钉拆毁，几秒钟就取下来，暂交自己手中保管。 3.验车再往前开不远，到大棚下停入车位等验车。过程也比较快，需要将三角停车标立于车后，师傅让打开发动机盖检查，打开天窗，打火在驾驶员位置手持仪表测了一会儿，就签字通过了。拿到一个排号条。 4.提档把车开回停车场停好，人到服务大厅等叫号。办理时需要现场折断刚才拆下来的一对车牌，新车主手持折断的车牌拍照。交费，办理有效期30天的临牌，工作人员很nice询问了临牌期间可能途径的省市打印到临牌上。填写档案邮寄地址，就办理完毕，可以回家了。 小客车转入北京之（二）入档&amp;上牌 办理前状态：准备：档案牛皮纸袋，新车主&amp;本人身份证，打印交强险&amp;商业险保单。不需新车主到场。办理后状态：小客车入档北京，得到北京临时牌照有效期7天。选号登记完毕，等牌照邮寄到家，自行安装。办理地点：北京市学院路机动车检测场。2019.08.12。全程用时：接近1整天，其实如果早上第一步能排到前面，是可以在中午前办完的。但是排队是用档案袋排，黄牛往档案里面插队现象严重，我们就被挤到十几名去了。总费用：忘记了，大约在小几百元。 1.档案排队，等柜台审核，提供所需证件材料，通过后发排队号。 2.等叫号把车开上一个大约25度的检修斜坡，熄火拉手刹，检测底盘刹车。之后慢慢倒车下来，检测玻璃透光率。前挡风玻璃有个最低透光率要求，好像是70%，前挡贴膜需要注意。 3.上一步完毕后，就要把车开到正式的队伍里排着等待检测了。检测是在一个开放的大棚下，有3条队伍可以排，哪队走得快看运气。这一项检测是最耗时的，详细检查发动机舱，轮胎外观等，每辆车大约需要15分钟左右。我们运气不大好，所在的队伍前进较慢，到中午休工时刻还没有排到。下午才轮到。 4.午饭去外面一个清真饭馆点盖饭，比较方便也好吃。 5.下一步就是尾气检测，尾气检测区面积很大。开车去排队，登记，工作人员会把车开走，到检测处前驱车前轮空转，排气管连接检测设备。完毕后把车交还，自己去把车停好，进入下一步。 6.最后一步完全在大厅柜台以及选号机前完成，包括一些信息录入，最终的选号，办理行驶证。","link":"/2019/08/05/from-Langfang-to-Beijing-car-license-plate/"},{"title":"hikvision-opencv","text":"获取海康威视网络摄像头图像，并转换为OpenCV图像格式。参考：捕获海康威视IPCamera图像，转成OpenCV可以处理的图像（二） 第二链接亲测可用，文中所说转化为YUV实际上是指转化为YCrCb。 海康威视 MFC例程 VC6 用VS2013打开遇到问题和解决 Building an MFC project for a non-Unicode character set is deprecated. You must change the project property to Unicode or download an additional library. ❌ project properties -&gt; general -&gt; project default -&gt; character set. 改为 Unicode✅ http://stackoverflow.com/a/24772665/2918210you need to install MFC MBCS DLL Add-on As mentioned in your error. (下载后成功解决！)https://msdn.microsoft.com/zh-cn/library/dn251007(v=vs.120).aspxhttps://www.microsoft.com/en-us/download/confirmation.aspx?id=40770 cannot convert parameter 1 from ‘const char [6]’ to ‘const wchar_t * http://stackoverflow.com/a/18162514/2918210the parameter has to be wrapped inside a _T or TEXT macro:如 strIP.Format(“%d.%d.%d.%d”,add4,add3,add2,add1); 变为 strIP.Format(_T(“%d.%d.%d.%d”),add4,add3,add2,add1); Visual C++中UpdateData()函数的功能是什么？afxwin.h UpdateData，顾名思义，是用来刷新数据的。UpdateData(TRUE) – 刷新控件的值到对应的变量 UpdateData(FALSE) – 拷贝变量值到控件显示例如，窗口中用 DDX_Text(pDX, IDC_EDIT1, m_usercode); 将IDC_EDIT1编辑框控件与m_usercode变量做了关联，如果修改m_usercode之后要想对应控件显示更改，则需要调用UpdateData(FALSE);反之在IDC_EDIT1的oneditchanged()中需要加入UdateData(TRUE); 简单的说，如果Updatedata(TRUE) == 将控件的值赋值给成员变量;Updatedata(FALSE) == 将成员变量的值赋值给控件;","link":"/2016/11/27/hikvision-opencv/"},{"title":"2016-11-22 纪念那只不幸去世的狗狗","text":"午饭回来和同事走在路上，那棕色的身影静静躺在柏油路中央，头部下方一片殷红。它的两只大眼睛，不甘的向外突出圆瞪，血浆是从张着的嘴中流出，在地上呈喷溅的形状。或许因距事发已有一段时间，又是冬天，血浆看起来很粘稠，像番茄酱一样。推测应该是被路过的机动车碾压。 其实我更先看到的是另一只棕白花色的狗狗，它属于不远处在小三轮车卖炒饼的夫妇。当时它正跑过来在路边观察着什么，但似乎由于害怕保持着一定距离。走过转角发现，原来它观望的就是那已经去世的同伴，它应该能懂。 我曾经更近距离的面对死者，但都平静安详，这样惨痛的情景确是首次直面。令人心如刀割。哎。它那棕黄色的短短毛发还呈现健康的光泽，眼睛还如此精密，身材匀称。若不是这起事故，它或许正在愉快的玩耍。有些事情，毫无缘由的发生。 唯一让人不那么难受的是，无论你刚才经历了什么，现在都已结束。安息吧，下辈子做一个健康快乐的生命。","link":"/2016/11/12/in-memory-of-the-unfortunate-dog/"},{"title":"iOS视频 裁剪／拼接／压缩（时间维度）","text":"之前已经实现了个需求是录屏分享，然而如今，野生的新需求出现了，那就是根据用户触发事件的时间点，裁剪/拼接视频。查了很久资料，得知AVFoundation可用，推荐Apple官方说明文档，十分详细。 首先要说说一个用到的结构，影片时间点结构 CMTime 12345678typedef struct{ CMTimeValue value; /* value/timescale = seconds. */ CMTimeScale timescale; CMTimeFlags flags; CMTimeEpoch epoch;} CMTime; value 表示此时刻在整个视频排第几帧，timescale 表示一秒有几帧，两者相除，当然得到 seconds，即此时刻在视频的第几秒。 只需记住 value / timescale = seconds 的关系就行。需要注意的是，timescale 不是你可以随意调的，而是在录制时决定的，而且，它的值不等于fps。比如，我的录制参数fps = 15，然而得到视频的 timescale = 44100 易知：CMTimeMake(value, timescale) &lt;=&gt; CMTimeMakeWithSeconds(value/timescale, timescale) 下面就是实现啦，我参考的是一个StackOverflow提问 单视频裁剪（视频路径videoPath，头部裁掉frontOffset秒，尾部裁掉endOffset秒）— 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647void clipVideo(NSString* videoPath, float frontOffset, float endOffset){ AVMutableComposition *composition = [AVMutableComposition composition]; // Create the video composition track. AVMutableCompositionTrack *compositionVideoTrack = [composition addMutableTrackWithMediaType:AVMediaTypeVideo preferredTrackID:kCMPersistentTrackID_Invalid]; // Create the audio composition track. AVMutableCompositionTrack *compositionAudioTrack = [composition addMutableTrackWithMediaType:AVMediaTypeAudio preferredTrackID:kCMPersistentTrackID_Invalid]; NSURL *pathUrl = [[NSURL alloc] initFileURLWithPath: videoPath]; AVURLAsset *asset = [AVURLAsset URLAssetWithURL:pathUrl options:nil]; [pathUrl release]; AVAssetTrack *videoTrack = [[asset tracksWithMediaType:AVMediaTypeVideo] firstObject]; // or use 'objectAtIndex:0' AVAssetTrack *audioTrack = [[asset tracksWithMediaType:AVMediaTypeAudio] firstObject]; [compositionVideoTrack setPreferredTransform:videoTrack.preferredTransform]; // CMTime CMTime trackDuration = videoTrack.timeRange.duration; CMTimeScale trackTimescale = trackDuration.timescale; // 用timescale构造前后截取位置的CMTime CMTime startTime = CMTimeMakeWithSeconds(frontOffset, trackTimescale); CMTime endTime = CMTimeMakeWithSeconds(endOffset, trackTimescale); CMTime intendedDuration = CMTimeSubtract([asset duration], CMTimeAdd(startTime, endTime)); // 下面函数的参数很关键，insertTimeRange是来源视频的区间，atTime是目标视频流中的位置 bool ok = [compositionVideoTrack insertTimeRange:CMTimeRangeMake(startTime, intendedDuration) ofTrack:videoTrack atTime:kCMTimeZero error:nil]; ok = [compositionAudioTrack insertTimeRange:CMTimeRangeMake(startTime, intendedDuration) ofTrack:audioTrack atTime:kCMTimeZero error:nil]; //export the combined video NSString *combinedPath = /*产出视频目标存储路径*/ NSURL *url = [[NSURL alloc] initFileURLWithPath: combinedPath]; AVAssetExportSession *exporter = [[[AVAssetExportSession alloc] initWithAsset:composition presetName:AVAssetExportPresetHighestQuality] autorelease]; exporter.outputURL = url; [url release]; exporter.outputFileType = AVFileTypeMPEG4; //exporter.outputFileType = [[exporter supportedFileTypes] firstObject]; [exporter exportAsynchronouslyWithCompletionHandler:^(void) { dispatch_async(dispatch_get_main_queue(), ^{ NSLog(@&quot;Export Complete %ld %@&quot;, (long)exporter.status, exporter.error); // 成功回调 }); }];} 多视频顺序连接（视频路径std::vector&lt;NSString*&gt; videoPaths）—多视频可以采用单视频采用不同的处理函数，同时传入一组timeRange和一组track，个人感觉比自己手动拼接效果好，后面视频的起始时间点不用自己算了，拼接处也不会有闪黑： 1(BOOL)insertTimeRanges:(NSArray&lt;NSValue *&gt; *)timeRanges ofTracks:(NSArray&lt;AVAssetTrack *&gt; *)tracks atTime:(CMTime)startTime error:(NSError * _Nullable * _Nullable)outError NS_AVAILABLE(10_8, 5_0); 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556void combineVideo(std::vector&lt;NSString*&gt; videoPaths){ AVMutableComposition *composition = [AVMutableComposition composition]; // Create the video composition track. AVMutableCompositionTrack *compositionVideoTrack = [composition addMutableTrackWithMediaType:AVMediaTypeVideo preferredTrackID:kCMPersistentTrackID_Invalid]; // Create the audio composition track. AVMutableCompositionTrack *compositionAudioTrack = [composition addMutableTrackWithMediaType:AVMediaTypeAudio preferredTrackID:kCMPersistentTrackID_Invalid]; // 准备 timeRanges 和 tracks NSMutableArray&lt;NSValue *&gt; * videoTimeRanges = [NSMutableArray array]; NSMutableArray&lt;NSValue *&gt; * audioTimeRanges = [NSMutableArray array]; NSMutableArray* videoTracks = [NSMutableArray array]; NSMutableArray* audioTracks = [NSMutableArray array]; for (int i = 0; i &lt; videoPaths.size(); i++) { NSURL *pathUrl = [[NSURL alloc] initFileURLWithPath: (videoPaths[i])]; AVURLAsset *asset = [AVURLAsset URLAssetWithURL:pathUrl options:nil]; [pathUrl release]; AVAssetTrack *videoTrack = [[asset tracksWithMediaType:AVMediaTypeVideo firstObject]; AVAssetTrack *audioTrack = [[asset tracksWithMediaType:AVMediaTypeAudio firstObject]; //set the orientation if (i == 0) { [compositionVideoTrack setPreferredTransform:videoTrack.preferredTransform]; } [videoTimeRanges addObject: [NSValue valueWithCMTimeRange: CMTimeRangeMake(kCMTimeZero, [asset duration])]]; [videoTracks addObject: videoTrack]; [audioTracks addObject: audioTrack]; } bool ok = [compositionVideoTrack insertTimeRanges:videoTimeRanges ofTracks:videoTracks atTime:kCMTimeInvalid error:nil]; assert(ok); ok = [compositionAudioTrack insertTimeRanges:audioTimeRanges ofTracks:audioTracks atTime:kCMTimeInvalid error:nil]; assert(ok); //export the combined video NSString *combinedPath = /*产出视频目标存储路径*/ NSURL *url = [[NSURL alloc] initFileURLWithPath: combinedPath]; AVAssetExportSession *exporter = [[[AVAssetExportSession alloc] initWithAsset:composition presetName:AVAssetExportPresetHighestQuality] autorelease]; exporter.outputURL = url; [url release]; exporter.outputFileType = AVFileTypeMPEG4; //exporter.outputFileType = [[exporter supportedFileTypes] firstObject]; [exporter exportAsynchronouslyWithCompletionHandler:^(void) { dispatch_async(dispatch_get_main_queue(), ^{ NSLog(@&quot;Export Complete %ld %@&quot;, (long)exporter.status, exporter.error); // 成功回调 }); }];} 压缩视频（核心代码）其他部分与前面类似。 12345678910111213141516171819202122void compressVideo(NSString* videoPath, float intendedDurationInSecs){ ... // 计算压缩率 CMTime trackDuration = asset.duration; CMTimeScale trackTimescale = trackDuration.timescale; float totalLengthOfSecs = (float)trackDuration.value / trackTimescale; float keepPercentage = intendedDurationInSecs / totalLengthOfSecs; //assert(keepPercentage &lt; 1.0f); if (keepPercentage &gt;= 1) { return; } CMTimeRange currentTimeRange = CMTimeRangeMake(kCMTimeZero, [asset duration]); CMTime finalDuration = CMTimeMake(int(intendedDurationInSecs * 25), 25); [compositionVideoTrack scaleTimeRange: currentTimeRange toDuration: finalDuration]; [compositionAudioTrack scaleTimeRange: currentTimeRange toDuration: finalDuration]; ...} 音轨相关情景1. 无音轨上面的代码其实没有考虑视频无音轨的情况，然而这种情况可能存在，需要判断和处理。 123456789bool hasAudio = true;...// 检测 是否有音轨if ([[asset tracksWithMediaType:AVMediaTypeAudio] count] == 0){ hasAudio = false; [composition removeTrack: compositionAudioTrack];}//根据flag决定是否处理音频 情景2. 需要去掉声音（音轨静音）目前成功的方法是最笨的：准备一个静音音频资源，从中读音轨，用来覆盖掉需要静音的区间。 12AVAsset* emptyAudioAsset = [AVURLAsset URLAssetWithURL:[NSURL fileURLWithPath:[[NSBundle mainBundle] pathForResource:@&quot;mute_stereo&quot; ofType:@&quot;mp3&quot;]] options:nil];emptyAudioTrack = [[emptyAudioAsset tracksWithMediaType:AVMediaTypeAudio] firstObject]; 欢迎讨论，但要在看过Apple官方说明文档之后哦！我只涉及了一个小子集。","link":"/2016/07/26/ios-video-clip-combine-compress/"},{"title":"从js到lua的写法转变 & 定时调用的实现","text":"记录最初接触lua时趟的一些坑。 语法糖 1. -&gt; : The : is syntax sugar in Lua which effectively implies the object on which the method is called being passed as first parameter. 基本语法替换 123456var -&gt; localthis -&gt; self!= -&gt; ~=! -&gt; not|| -&gt; or// -&gt; -- list转table 12someList.push(e) -&gt;table.insert(someTable, e) 数学 1234567parseInt() -&gt; tonumber()Math.floor(Math.random() * n) -&gt; math.floor(math.random()* n)Math.PI -&gt; math.picc.pDistance -&gt; cc.pGetDistancecc.pToAngle -&gt; cc.pToAngleSelf 当前时刻 1local currTime = cc.utils:gettime() -- 单位是秒 update() 123456this.scheduleUpdate()-&gt;local function _update(dt) self:update(dt)endself:scheduleUpdateWithPriorityLua(_update, 0) schedule/unschedule12345678schedule(func, interval, cc.REPEAT_FOREVER)scheduleOnce(func, delayTime)unschedule(func)-&gt; 新接口，实现见后文。function TimerCallFunc:addCallFunc(func, delay, param, group)function TimerCallFunc:addScheduleFunc(func, interval, param, group)function TimerCallFunc:clearGroup(group)function TimerCallFunc:unscheduleFunc(func, group) lua中的定时调用实现extern.lua 提供了通过runAction实现的schedule(定期)和performWithDelay(单次) 1234567891011121314function schedule(node, callback, delay) local delay = cc.DelayTime:create(delay) local sequence = cc.Sequence:create(delay, cc.CallFunc:create(callback)) local action = cc.RepeatForever:create(sequence) node:runAction(action) return actionendfunction performWithDelay(node, callback, delay) local delay = cc.DelayTime:create(delay) local sequence = cc.Sequence:create(delay, cc.CallFunc:create(callback)) node:runAction(sequence) return sequenceend 然而，通过Action的实现总让人有些不放心，比如stopAllActions()就会令其失效。有没有更纯粹的方法呢？有的，就是scheduler:scheduleScriptFunc()方法。 12345unsigned int scheduleScriptFunc ( unsigned int nHandler, float fInterval, bool bPaused ) The scheduled script callback will be called every ‘interval’ seconds.If paused is YES, then it won’t be called until it is resumed. If ‘interval’ is 0, it will be called every frame. return schedule script entry ID, used for unscheduleScriptFunc(). NA 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263TimerCallFunc = class(&quot;TimerCallFunc&quot;)function TimerCallFunc:ctor() self.maps = {} self._instance = nilendfunction TimerCallFunc:getInstance() if not self._instance then self._instance = TimerCallFunc.new() end return self._instanceend--- 单次调用function TimerCallFunc:addCallFunc(func, delay, param, group) self:_addFunc(func, delay, param, group, false)end--- 循环调用function TimerCallFunc:addScheduleFunc(func, interval, param, group) self:_addFunc(func, interval, param, group, true)endfunction TimerCallFunc:_addFunc(func, dt, param, group, loop) group = group or cc.Director:getInstance():getRunningScene() if not group then return end self.maps[group] = self.maps[group] or {} if func and not self.maps[group][func] then local function append(loop) if self.maps[group] then if (not loop) then self:unscheduleFunc(func, group) end func(param) end end local scheduler = cc.Director:getInstance():getScheduler() local entry = scheduler:scheduleScriptFunc(function() append(loop) end, dt, false) self.maps[group][func] = entry endendfunction TimerCallFunc:clearGroup(group) if self.maps[group] then local scheduler = cc.Director:getInstance():getScheduler() for k, v in pairs(self.maps[group]) do scheduler:unscheduleScriptEntry(v) end end self.maps[group] = nilendfunction TimerCallFunc:unscheduleFunc(func, group) group = group or cc.Director:getInstance():getRunningScene() if self.maps[group] and self.maps[group][func] then local scheduler = cc.Director:getInstance():getScheduler() scheduler:unscheduleScriptEntry(self.maps[group][func]) self.maps[group][func] = nil endend 12345-- 用法TimerCallFunc:getInstance():addCallFunc(self.someFunc, dt, self, self)TimerCallFunc:getInstance():addCallFunc(function() -- bodyend, dt, self, self)","link":"/2018/05/16/js-lua-conversions-and-function-schedule/"},{"title":"learn-from-pamakids","text":"周四有幸听了斑马骑士的讲述，连续四个半小时，干货多多！先记在这里，应该没有什么不能泄漏的机密吧！😁 可用性/Human Factors -&gt; UX 产品经理 x 游戏策划 站在未来，回望现在要教给孩子什么 3～4岁大脑发育至80%，可代表成人。 怎么教vs教什么？&lt;- 更important，自行取舍什么会被淘汰。 &lt;3岁：奶粉，衣服，无ip玩具，绘本…… 内容：图书，影音，游戏消费品：玩教具教育培训文娱活动 痛点／痒点 衡量：愿意花半月～一月工资购买此服务？ 不要分裂母亲&amp;孩子，而是视作四眼四腿两头脑的生物。 做产品时想孩子，做好后再想父母。（!彩翼：配色，装裱，盛装出席。） 孩子喜欢动画／书／影视／游戏，但要真正爱上（共情），需要ip。ip通过精美故事塑造（我个人理解：立体人格）。 暴漫模式先进（图），但火于草根／吐槽文化，不上层。随着高知父母／文化提升，会被淘汰。 00后从小存在于两重平行世界中：虚拟&amp;真实。而我们老人是从真实接触虚拟。且家长更放得开-&gt;孩子自主自由获取信息-&gt;代差会拉大⬆️。 Microsoft: Minecraft + Hololens 二. 面对现实：心理学原理：多通道信息加工，信息处理，效率更高。（已实验证明） 芝麻街：打招呼 -&gt; 教学练 -&gt; 教学练 …… 三. 尊重科学：现在(iPad) &lt;-&gt; 过去(布娃娃)坏：直接给具象，限制想象力。好：高效传输知识 PlaySquare 动画互动PIXAR：视角：现实-&gt;新颖 儿童爱的要素：角色扮演／收集／解谜／互动 +内容 &lt;-&gt; -工具+有梯度、深度，反复体验-用完就走。","link":"/2016/09/04/learn-from-pamakids/"},{"title":"天津一日游 20160806","text":"这个周末是舅舅的四十周年（回民认为逝世四十周年以后，亡人的灵魂就将永远离去，不再回来。）尽管数月前已经做过事了，但大姨、妈妈、三姨，还是商量三家人一起用这个周末去天津的寺里以及故居看看，游览天津。天津是她们爷辈的家乡，也是父辈（我姥爷姥姥）从小生活的地方（直到他们长大后去了山西支援建设）。然而闷热的天气形成很大阻力，大姨三姨身体不大好，不能前往。于是最终，妈妈和我踏上了旅途。我很爱北京南站的设计，地下空间开阔，与地铁4号线无缝连接。上二楼在自动售票机用银行卡买票，走几步就是检票口，下扶梯上高铁，方便至极。8年前北京奥运开幕之初的时候，我和妈妈也是从南站出发去天津，很巧合。 第一站：西北角清真寺🕌️火车站地下直接可换乘地铁，也是分段计价。首先去看北大寺，大丰路已经大变样，小豁巷早已不在，妈妈认不出来了。北大寺被周围的高楼圈在很小的地方。我坐在寺院里，抬头看到的是旁边三十层的棕色公寓楼，毫无隐私可言。怀念以前只有蓝天白云的日子。之后向南走，去南大寺。寺里正在扩建讲堂。旁边居民区的卫生环境很不好，井盖冒出的污水和空调外机的热浪让人心烦。顺着当地人指示找到一家清真小馆，三鲜饺子（韭菜牛肉虾仁）和酱牛肉很好吃。从阿訇得知北大寺再往北有一个“洋葱头”顶的虹桥大寺，规模更大，遂折返。天很热，从商场中吹着空调穿行。好不容易走到了却有些失望，这里更像是一个办公机构，把门三位老太太管的很严，嘴还挺损，短裤不能入内。 第二站：新华利里去最近的地铁站要继续向北走，到天津西站。坐上地铁终于能凉爽一下。营口道是妈妈的姥姥的故居所在地，出站进发去找寻。我超喜欢这样的建筑，妈妈说以前这里的人都是一家一栋小楼，院门是大铁门，进去直接上楼梯进客厅，再往里走楼内还有个大院子。 第三站：劝业场，大沽桥距离劝业场不远，妈妈说她小时候经常跑到这边玩，看电影，买吃的。今天也顺便来看看吧！劝业场这条大街和王府井挺像的，人流量大。也有一条小吃街。本来以为劝业场大楼里面会很热闹，然而进来发现顾客寥寥，她的没落让人挺吃惊。在旁边的康乐买两根冰棍，坐在商场里面吃，休息一会儿，我爱抹茶冰棍！找了半天桂发祥买老八件，问了好几位路人，只找到一家但位置和妈妈记忆里不一致，后来问店员才知道这里就是原来的店搬过来了……去海河的途中，走了一些弯路。天津也是个发展拉大贫富差距的城市。站在河边，看着像两岸如新加坡一般的现代化高楼林立，很难相信西北角那样脏乱的地域也属于这个城市。 双腿双脚早已酸疼，要是有个手环，估计也能排第一了吧！走过解放桥，人行的栈道木条间距小了很多。（妈妈说以前有一次姥姥来火车站接她和大姨，包掉下去正好卡在木条间，很惊险。）告别天津！","link":"/2016/08/07/one-day-in-Tianjin/"},{"title":"隐藏继承关系中父类子类的实现 manage-to-hide-implementation-of-base-and-derived-class","text":"缘起最近一段时间的主要工作是制作一个iOS Static Library，那么必然要做到的就是实现的隐藏，只外露一些包含公开方法的头文件，随*.a*文件一同交付，无论动机是代码保密，或是尽量简化对外接口。如何做到呢？ 分析通过搜索找到一种称作C++桥接设计模式(impl)的方法，看起来比较复杂一些，并未深入研究。现在，想象一下，如果在外露的头文件里用户看到的是类X，而库的实现中拥有私密成员和方法的其实是类Y，两者是什么关系呢？大致无非两种：X私藏一个Y的指针，把所有方法指派给Y去做，即X has-a Y；或者，Y继承自X，并把X承诺的接口都实现了，即Y is-a X。两者孰优孰劣应该比较明显：前者X每新增一个方法，都要在Y增加一个相应的方法，并X实现中手动调用，有些繁琐，不是长久之计，而且从直觉上不满足XY地位平等。其实，后者采用的继承也正是对于这些疑问的完美解决方案，无需在X，Y中两份声明，重载和虚函数也能提供更大的灵活性和可能性。 简单版需求：要隐藏某一个类#####为了和后文统一，就称这个类名为Base。那么要做的是：首先将其隐姓埋名，改称BaseImpl（Impl是implementation的简称），再建立一个冒名顶替的Base类作为他的爸爸。 具体实现方式：继承 + Factory Method + 纯虚方法 / GetImpl() downcasting （二选一）参考链接：Hiding-Implementation-Details-in-C最后一段。作者把BaseImpl的定义和实现都放进了Base.cpp，但我做了些改动以使结构清晰，将两个类的定义和实现拆了出来放到各自的.h/.cpp中。 采用纯虚方法（个人推荐）： The client no longer sees any of the implementation details. The cost is that we are now required to have a factory method and virtual methods. 123456789// Define a public interface in foo.hclass Foo{public: virtual void SetPosition(float x, float y) = 0; // 纯虚 static Foo* Create();protected: Foo() {} // hide}; 1234567// foo.cpp// Define factory methodFoo* Foo::Create(){ return new FooImpl();} 12345678910// Define a private implementation in fooImpl.hclass FooImpl : public Foo{public: FooImpl() {} void SetPosition(float x, float y);private: float m_x, m_y; // private data void PrivateMethod() {} // private method}; 12345// fooImpl.cppvoid FooImpl::SetPosition(float x, float y){ m_x = x; m_y = y;} 采用 GetImpl() downcasting 方法： By downcasting in the class methods, we get access to the implementation data without virtual methods. 123456789// Define a public interface in foo.hclass Foo{public: virtual void SetPosition(float x, float y); static Foo* Create();protected: Foo() {} // hide}; 1234567891011121314151617// foo.cpp// Define factory methodFoo* Foo::Create(){ return new FooImpl();}// downcasting methodsinline FooImpl * GetImpl(Foo* ptr) { return (FooImpl *)ptr; }inline const FooImpl * GetImpl(const Foo* ptr) { return (const FooImpl *)ptr; }// Define public methodvoid Foo::SetPosition(float x, float y){ FooImpl * f = GetImpl(this); f-&gt;SetPosition(x, y);} fooImpl.h fooImpl.cpp 与方法1)中无异。 到此为止，已经实现了对单个类的隐藏。如果原本没有涉及继承的话，至此已满足需求。这样实现的好处是，原来你在foo中实现的各种私有内容，比如各种private, friend class, enum, typedef function等，都原封不动的转移到fooImpl的实现就行，就像前面说的，fooImpl实际上就是原来的foo。 然而我的最终目标是隐藏一对本来已经存在继承关系的父子类，在依照上述方法2)拓展时遭遇无法解决的问题。结构应该拓展为下图的关系，这样既满足外露的Base和Derived类的父子关系，又满足BaseImpl和DerivedImpl类的父子关系。看到DerivedImpl继承了两个同源类，不好的预感已经产生……没错，就是菱形继承 (Diamond of Death) 之前还没有在实践中遇到过类似问题，这次花费的很多时间作为补课。 Base* d = Derived::Create();d-&gt;SetPosition(5, 10); 第二句就崩，查看变量里面的内容，各种值都是随机值，看来是指针类型转换导致内存混乱。尝试分析一下：第一句，创建了DerivedImpl向上转换为Derived*再向上转换为Base*，第二句调用方法时，又向下转换为BaseImpl*。 How can I avoid the Diamond of Death when using multiple inheritance?其中的答案解释了一些疑惑： A practical example: class A {};class B : public A {};class C : public A {};class D : public B, public C {}; Notice how class D inherits from both B &amp; C. But both B &amp; C inherit from A. That will result in 2 copies of the class A being included in the vtable. 也就是说，DerivedImpl对象里会保存2份Base，然而他的父亲和爷爷都不是这个结构，指针强制类型转换后出问题也就有可能了。那么正确的做法是什么呢？ To solve this, we need virtual inheritance. It’s class A that needs to be virtually inherited. So, this will fix the issue: class A {};class B : virtual public A {};class C : virtual public A {};class D : public B, public C {}; 啊哈，就是让中间两个父类虚继承爷爷类！那么扩展方法1)，我的实现结构应该如下：举个栗子🌰 12345678910111213141516// Define a public interface in Base.hclass Base{public: static Base* Create(); virtual void setPosition(float x, float y) = 0; virtual Point getPosition() = 0; virtual float getArea() = 0;};class Derived : virtual public Base{public: static Derived* Create(); virtual void setSomething(float s) = 0;}; 12345678910// Base.cppBase* Base::Create(){ return new BaseImpl();}Derived* Derived::Create(){ return new DerivedImpl();} 12345678910111213141516171819202122// BaseImpl.hclass BaseImpl : virtual public Base{ friend class xxx;public: BaseImpl() {} void setPosition(float x, float y); Point getPosition(); virtual float getArea();private: float m_x, m_y, area2D; // private data void privateMethod(); // private method};class DerivedImpl : public Derived, public BaseImpl{public: void setSomething(float s); virtual float getArea(); // overwriteprivate: float area3D;}; 123456789101112131415161718192021222324// BaseImpl.cppvoid BaseImpl::setPosition(float x, float y){ m_x = x; m_y = y;}Point BaseImpl::getPosition(){ return Point(m_x, m_y);}float BaseImpl::getArea(){ return area2D;}void BaseImpl::privateMethod(){ // do something. }void DerivedImpl::setSomething(float s){ // blablabla}float DerivedImpl::getArea(){ return area3D;} 好啦！现在我们已经实现了对外的实现隐藏，然而最后还要解决一个问题。用户Create的是Base和Derived，库内部我们自己写的函数需要访问的是BaseImpl和DerivedImpl，因此需要从B/D到BImpl/Dimpl的转换，如何做呢？答案是__dynamic_cast__。在问题C++ cannot convert from base A to derived type B via virtual base A的解答中有述： This is what static_cast do: a static cast is dubbed static because the computation of what is necessary for the cast is done at compile-time, be it pointer arithmetic or conversions (*). However, when virtual inheritance kicks in things tend to become a bit more difficult. The main issue is that with virtual inheritance all subclasses share a same instance of the subobject. In order to do that, B will have a pointer to a A, instead of a A proper, and the A base class object will be instantiated outside of B.Therefore, it’s impossible at compilation time to be able to deduce the necessary pointer arithmetic: it depends on the runtime type of the object. In summary: compile-time downcast: static_cast run-time downcast: dynamic_cast 即，static_cast只能用于在编译时已可确定对象类型的情况，而涉及虚继承的情况，需要动态转化类型，所以要用dynamic_cast。 终于大功告成！😃 知识补充纯虚函数 声明后有“＝0”的函数，如virtual void function() = 0; 纯虚函数不可实现。纯虚类 定义中含有纯虚函数的类。纯虚类不能通过构造函数new出一个实例，但可以有指针对象。__virtual static function()__不可存在 因为static的目的是生成只与类有关的全局固态方法，而virtual的目的是根据具体对象的类别，动态灵活指向函数，两者互斥。","link":"/2016/11/07/manage-to-hide-implementation-of-base-and-derived-class/"},{"title":"一道题的两个解法","text":"HackerRank的HourOfCode2016题组，平均难度较低，然而有一道题把我难住了。 The great robbery While going to winter vacation you found a beautiful frozen lake. You noticed something shiny in the middle of it. When you got closer you realized that there is a huge pile of gold bars on a little island. Realizing that you are rich, you started dreaming about everything you could buy, but first of all you have to collect all the gold. Unfortunately, the ice on the lake is not strong enough and cannot support the weight of all the gold. However, you know that the lake can be represented by a 2 dimensional matrix where every cell of the matrix has a value corresponding to the maximum weight of gold that can be transported over that field. You are given the coordinates of your current position and the coordinates of your destination. Find a route that enables you to take as much gold as possible and print that amount of gold. You can asume that the amount of gold on the island is always equal to the maximal amount of gold that can be on that tile. Keep in mind that the path that enables you to take the highest amount of gold doesn’t have to be the shortest path! Input FormatThe first row contains two numbers N and M, the height and width of the lake.The second row contains two numbers StartX and StartY, representing the starting coordinates.The third row contains two numbers DestinationX and DestinationY, representing the coordinates of the destination.This is followed by N rows containing M numbers each, containing the values for the matrix representing the lake. Sample 题意四连通矩阵，求起始点到目标点之间，最大的路径容量。路径容量由途经元素中最小的容量决定。 我的思路建等大矩阵max2start，每个元素的值表示由起始点到当前点的已知最大路径容量，初始化都为0。采用队列结构，每个循环弹出队首，更新它4个邻居的max2start值，并压入队列。初始化压入起始点，一直循环到队空为止。这么做应该不会有错误，但可想而知，一个元素可能多次被压入队列，耗时太久，RunTimeError了2/3的TestCases…… 下面说读满分代码发现的两种答案。答案一：思路大致类似，但增加了等大Bool矩阵visited，而且是实用Priority Queue。_LELOY_的解法 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980#include &lt;cmath&gt;#include &lt;cstdio&gt;#include &lt;vector&gt;#include &lt;iostream&gt;#include &lt;algorithm&gt;#include &lt;queue&gt;#include &lt;climits&gt;using namespace std;typedef pair&lt;int, int&gt; ii;typedef pair&lt;int, ii&gt; iii;class CompareDist{public: bool operator()(iii n1, iii n2) { return n1.first &lt; n2.first; }};int main() { int N, M; cin&gt;&gt;N&gt;&gt;M; vector&lt;vector&lt;int&gt; &gt; grid(N, vector&lt;int&gt;(M, 0)); int sI, sJ; cin&gt;&gt;sJ&gt;&gt;sI; int eI, eJ; cin&gt;&gt;eJ&gt;&gt;eI; for (int i = 0; i &lt; N; ++i) { for (int j = 0; j &lt; M; ++j) { cin&gt;&gt;grid[i][j]; } } vector&lt;vector&lt;int&gt; &gt; vis(N, vector&lt;int&gt;(M, false)); priority_queue&lt;iii, vector&lt;iii&gt; , CompareDist &gt; q; q.push(make_pair(grid[sI][sJ], make_pair(sI, sJ))); while(!q.empty()) { int i = q.top().second.first; int j = q.top().second.second; int g = q.top().first; q.pop(); //cout&lt;&lt;g&lt;&lt;&quot; &quot;&lt;&lt;i&lt;&lt;&quot; &quot;&lt;&lt;j&lt;&lt;&quot; &quot;&lt;&lt;vis[i][j]; vis[i][j] = true; int dr[] = {0, -1, 0, 1}; int dc[] = {-1, 0, 1, 0}; for (int k = 0; k &lt; 4; ++k) { int ti = i + dr[k]; int tj = j + dc[k]; if (ti &lt; 0 || tj &lt; 0 || ti &gt;= N || tj &gt;= M) continue; if (vis[ti][tj]) continue; if (grid[i][j] &lt; grid[ti][tj]) { grid[ti][tj] = grid[i][j]; } q.push(make_pair(grid[ti][tj], make_pair(ti, tj))); } /* cout&lt;&lt;&quot; done&quot;&lt;&lt;endl; for (auto a: grid) { for (auto b: a) { cout&lt;&lt;b&lt;&lt;&quot; &quot;; } cout&lt;&lt;endl; } cout&lt;&lt;endl; */ } cout&lt;&lt;grid[eI][eJ]&lt;&lt;endl; return 0;} 答案二：二分查找的思想。这是我第一次见到。可以这么想：既然需要找容量最大的可行路径，而且已知所有元素的值在[Min, Max]之间，那么解肯定也在这个范围内。那么我只要不断用一个中值med，测试是否有一条容量大于等于med的路径就行。二分查找的精彩运用啊！如何测试是否有这条路径呢？类似的，bool矩阵visited + 普通队列就可实现。 cs1235的解法 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081import java.io.*;import java.util.*;public class Solution { static class Pair { int x; int y; public Pair(int x, int y) { this.x = x; this.y = y; } } public static boolean reachableWithWeight(int h, int w, int[][] grid, int startX, int startY, int destX, int destY, int weight) { if(weight &gt; grid[startY][startX]) { return false; } boolean[][] visited = new boolean[h][w]; Queue&lt;Pair&gt; queue = new LinkedList&lt;Pair&gt;(); queue.add(new Pair(startX, startY)); while(!queue.isEmpty()) { Pair next = queue.poll(); int x = next.x; int y = next.y; if(x &lt; 0 || x &gt;= w || y &lt; 0 || y &gt;= h) { continue; } if(visited[y][x]) { continue; } //System.out.println(y + &quot; &quot; + x); visited[y][x] = true; if(weight &gt; grid[y][x]) { continue; } if(x == destX &amp;&amp; y == destY) { return true; } queue.add(new Pair(x + 1, y)); queue.add(new Pair(x - 1, y)); queue.add(new Pair(x, y + 1)); queue.add(new Pair(x, y - 1)); } return false; } public static void main(String[] args) throws IOException { BufferedReader f = new BufferedReader(new InputStreamReader(System.in)); StringTokenizer st = new StringTokenizer(f.readLine()); int n = Integer.parseInt(st.nextToken()); int m = Integer.parseInt(st.nextToken()); st = new StringTokenizer(f.readLine()); int startX = Integer.parseInt(st.nextToken()); int startY = Integer.parseInt(st.nextToken()); st = new StringTokenizer(f.readLine()); int destX = Integer.parseInt(st.nextToken()); int destY = Integer.parseInt(st.nextToken()); int[][] grid = new int[n][m]; for(int i = 0; i &lt; n; i++) { st = new StringTokenizer(f.readLine()); for(int j = 0; j &lt; m; j++) { grid[i][j] = Integer.parseInt(st.nextToken()); } } int lower = 1; int upper = 1000000000; while(lower &lt; upper) { int med = (lower + upper)/2; //System.out.println(med); if(reachableWithWeight(n, m, grid, startX, startY, destX, destY, med)) { lower = med + 1; } else { upper = med; } //System.out.println(); } System.out.println(lower - 1); }} 最后放一个我参考方法一的Python代码，思路一样然而超时了…… 第一次用Python的PriorityQueue。 123456789101112131415161718192021222324252627282930313233343536373839404142import queuen, m = input().strip().split(' ')n, m = [int(n), int(m)]sX, sY = input().strip().split(' ')sX, sY = [int(sX), int(sY)]dX, dY = input().strip().split(' ')dX, dY = [int(dX), int(dY)]ice = []for i in range(n): a_t = [int(a_temp) for a_temp in input().strip().split(' ')] ice.append(a_t) #print(ice)visited = [[False for col in range(m)] for row in range(n)]q = queue.PriorityQueue()q.put((-ice[sY][sX], [sY, sX]))while(not q.empty()): y, x = q.get()[1] if (visited[y][x]): continue if (dY == y and dX == x): break visited[y][x] = True #print('update [',y,'][',x,']') for [ny, nx] in [[y-1,x], [y,x-1], [y,x+1], [y+1,x]]: if (ny &lt; 0 or ny &gt;= n or nx &lt; 0 or nx &gt;= m): continue if (visited[ny][nx]): continue if (ice[y][x] &lt; ice[ny][nx]): ice[ny][nx] = ice[y][x] q.put((-ice[ny][nx], [ny, nx])) #print('= append [',ny,'][',nx,'], new Value =', ice[ny][nx])print(ice[dY][dX])","link":"/2016/12/13/one-problem-with-two-solutions/"},{"title":"openCV-openGL-Mesa","text":"切记！VisualStudio包含Mesainclude文件夹！ 相关问题解决 未声明M_PI error C2065: ‘M_PI’ : undeclared identifier 声明使用M_PI的默认方法为： 在stdafx.h头文件中声明. 12#define _USE_MATH_DEFINES #include &lt;math.h&gt; （记得#include “stdafx.h”哦） Error: “fopen’: This function or variable may be unsafe.” 2.040 What OpenGL implementations come with source code? [Link]The Mesa library is an OpenGL look-alike. It has an identical interface to OpenGL. The only reason it can’t be called “OpenGL” is because its creator hasn’t purchased a license from the OpenGL ARB.The OpenGL Sample Implementation is also available. TOadd tables providing solutions Mesa 3D是一个在MIT许可证下开放源代码的三维计算机图形库，以开源形式实现了OpenGL的应用程序接口。OpenGL的高效实现一般依赖于显示设备厂商提供的硬件，而Mesa 3D是一个纯基于软件的图形应用程序接口。由于许可证的原因，它只声称是一个“类似”于OpenGL的应用程序接口。由于Mesa 3D的api是和opengl 相同，具体的opengl版本浏览Mesa 3D官方网站，我们可以这么认为它就是opengl的软件模拟gpu光栅处理器的一个实现。我们知道如果要实现一个opengl，其本身是一个设备器，不能实现窗体的透明，如果我想要实现窗体透明，又想要有3D的应用，可以试试它。[Link] &lt;GL/glut.h&gt;：GLUT（OpenGL实用工具包）所使用的函数和常量声明。这个库的功能大致与GLAUX类似，目前许多OpenGL教程使用这个库来编写演示程序。一些编译系统可能不直接提供这个库（例如VC系列），需要单独下载安装。这个头文件自动包含了&lt;GL/gl.h&gt;和&lt;GL/glu.h&gt;，编程时不必再次包含它们。[Link]","link":"/2016/12/29/openCV-openGL-Mesa/"},{"title":"点在凸包内检测","text":"不久遇到个具体问题，是如何判断一个point是否在一个rotatedRect内部。找到两个网页给出了解答。 第一个网页提供了多种解决方法。 方法一：把矩形转正，点的坐标也要变换从而保持相对位置不变，就转化为简单的x/y坐标是否在矩形内判断了。 You can rotate the point by an inverse angle about the center of the rectangle given that you know by how much the rectangle was rotated. Then the test to see if the point is inside the axis-aligned rectangle becomes a trivial thing. 方法二：用目标点分别与矩形两个相邻节点组成三角形，比较这4个三角形的面积之和是否与矩形总面积（几乎）相等。不过这个方法的误差限epsilon可能要手调。 If you are testing a rectangle ABCD with a point x, check ifarea(ABx) + area(BCx) + area(CDx) + area(DAx) &lt; area(ABCD) + epsilonIf so, you are inside. Otherwise you are outside. There are probably faster checks, but this is pretty simple conceptually and programming-wise. 方法三，先不说是什么，看到这个简洁的代码我立马震惊。 try this: 1234567891011float ex,ey,fx,fy;ex=bx-ax; ey=by-ay;fx=dx-ax; fy=dy-ay;if ((x-ax)*ex+(y-ay)*ey&lt;0.0) return false;if ((x-bx)*ex+(y-by)*ey&gt;0.0) return false;if ((x-ax)*fx+(y-ay)*fy&lt;0.0) return false;if ((x-dx)*fx+(y-dy)*fy&gt;0.0) return false;return true; Easy huh? Without rotation or drawing rectangles… I assume that a,b,c and d are really the four corners of a rectangle.The test is just checking whether the point lies on the right side of each rectangle edge. 原来是Right Test！脑中远古的记忆又依稀了起来。什么是Right Test呢？它是计算几何里非常非常非常基本的一个方法。知名度就像考拉之于澳大利亚一样。 那么下面就结合第二个网页理解Right Test吧！它讲的很详细。例子是三角形ABC，但这个方法适用于所有凸多边形。 怎么判断点p是否在三角形内呢？既然这个三角形是由三条边围成的，那如果相对于每条边，点p与第三个点在同侧，就能确定p在三角形内。 确定问题：怎么判断点p, C在线段AB同侧？用叉乘： [B-A] cross [p-A] 应该与 [B-A] cross [C-A] 同号。 12345678910function SameSide(p1,p2, a,b) cp1 = CrossProduct(b-a, p1-a) cp2 = CrossProduct(b-a, p2-a) if DotProduct(cp1, cp2) &gt;= 0 then return true else return falsefunction PointInTriangle(p, a,b,c) if SameSide(p,a, b,c) and SameSide(p,b, a,c) and SameSide(p,c, a,b) then return true else return false p.s. 该网页还介绍了针对三角形的另一种方法","link":"/2016/07/27/point-inside-convex-hull/"},{"title":"从iOS/Android移植Windows需作出的一些修改","text":"pthread不认识相关报错Windows下需要明确包含库 #include &lt; pthread.h&gt; 实现android提供的函数 clock_gettime(CLOCK_REALTIME, &amp;result);http://stackoverflow.com/questions/5404277/porting-clock-gettime-to-windows sleep()函数 #include &lt; windows.h&gt; 使用 Sleep() Xcode创建的源码文件，有中文字符，VS理解不能用NotePad++打开源代码，编码 从UTF-8无BOM格式 -&gt; UTF-8Configuration Properties -&gt; General -&gt; Character Set =&gt; Use Unicode Character Set / Use Multi-Byte Character Set dll, lib, .h 文件添加套路dll ——&gt;动态链接库include ——&gt;头文件 C/C++ -&gt; General -&gt; Additional Include Directorieslib ——&gt;静态链接库 文件目录增加到：Linker -&gt; General -&gt; Additional Library Directories 文件名增加到：Linker -&gt; Input -&gt; Additional Dependencies Cocos2d-x实现 Resources/ 资源文件 自动拷贝到exe输出目录供调用http://www.cocos2d-x.org/wiki/Chapter_2_-_How_to_Add_a_sprite注意 我改为了 “..\\Resources” cocos2d win32 glsl 不认识 highp 导致shader无效删掉.fsh/.vsh中的 highp 即可运行，未发现问题。","link":"/2017/02/19/some-solutions-when-migrating-from-iOS-Android-to-Windows/"},{"title":"towrite","text":"延庆4次游记HackerRank woc 27总结厦门day3 + 2次 C java 互调Xzip &amp; windows cocos n次开车小牛回忆照片选 阿里cpr 澳门江浙沪 DDC","link":"/2018/10/20/towrite/"},{"title":"svn有用的一些命令","text":"使用本地目录在svn创建版本库 1svn import 本地文件夹路径 svn://[ip]/[路径]/[名称] -m '评论(必需)' 注意，完成导入后，原目录/projects/hello并不转换为“工作副本(working copy)”，而且该项目已经转由该仓库接管，即该仓库中已经包含了首次导入的工程的所有信息，与源目录/project/hello再无任何关系，我 们完全可以删除这一目录而不必担心丢失工程项目数据。注意，如果源目录并不是一个“工作副本”，那么就无法用svn进行管理，在其中所作的任何变动都无法 提交到仓库。 要用subversion对工程进行版本管理，那么工程项目的开发必须在一个“工作副本”中进行，即首先要从仓库获取一个“工作副本”。 神奇的命令：将目录及子目录中所有后缀为.a的文件加入版本控制 🙏刚司机现场组装 1find . -iname &quot;*.a&quot; -exec svn add {} \\; 几个有用命令：st, info, ls svn st列出本地所有相较版本库有变化的文件，包括M修改过，?未控制，A新增等等。 svn info列出本项目的各参数信息，包括版本库url等等。 svn ls [url]列出版本库下文件结构，有哪些项目。","link":"/2017/02/19/svn-commands/"},{"title":"transplant-project-to-windows-platform","text":"#####一些问题解决的记录 VS2013配置pthreadVS2013配置pthread最后记得要 1#include &lt;pthread.h&gt; 全局变量引发的链接时的LNK2005xxx already defined in yyyy.obj全局变量引发的链接时的LNK2005xxx already defined in yyyy.obj.h只声明全局变量，.cpp中定义。 用于VS的__gettimeofday()__how to use gettimeofday() or something equivalent with Visual Studio C++ 2008? 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081#include &quot;stdafx.h&quot;#include &lt;time.h&gt;#include &lt;windows.h&gt; const __int64 DELTA_EPOCH_IN_MICROSECS= 11644473600000000;/* IN UNIX the use of the timezone struct is obsolete; I don't know why you use it. See http://linux.about.com/od/commands/l/blcmdl2_gettime.htm But if you want to use this structure to know about GMT(UTC) diffrence from your local time it will be next: tz_minuteswest is the real diffrence in minutes from GMT(UTC) and a tz_dsttime is a flag indicates whether daylight is now in use*/struct timezone2 { __int32 tz_minuteswest; /* minutes W of Greenwich */ bool tz_dsttime; /* type of dst correction */};struct timeval2 {__int32 tv_sec; /* seconds */__int32 tv_usec; /* microseconds */};int gettimeofday(struct timeval2 *tv/*in*/, struct timezone2 *tz/*in*/){ FILETIME ft; __int64 tmpres = 0; TIME_ZONE_INFORMATION tz_winapi; int rez=0; ZeroMemory(&amp;ft,sizeof(ft)); ZeroMemory(&amp;tz_winapi,sizeof(tz_winapi)); GetSystemTimeAsFileTime(&amp;ft); tmpres = ft.dwHighDateTime; tmpres &lt;&lt;= 32; tmpres |= ft.dwLowDateTime; /*converting file time to unix epoch*/ tmpres /= 10; /*convert into microseconds*/ tmpres -= DELTA_EPOCH_IN_MICROSECS; tv-&gt;tv_sec = (__int32)(tmpres*0.000001); tv-&gt;tv_usec =(tmpres%1000000); //_tzset(),don't work properly, so we use GetTimeZoneInformation rez=GetTimeZoneInformation(&amp;tz_winapi); tz-&gt;tz_dsttime=(rez==2)?true:false; tz-&gt;tz_minuteswest = tz_winapi.Bias + ((rez==2)?tz_winapi.DaylightBias:0); return 0;}int _tmain(int argc, _TCHAR* argv[]){struct timeval2 tv;struct timezone2 tz;struct tm *tm1; time_t time1;ZeroMemory(&amp;tv,sizeof(tv));ZeroMemory(&amp;tz,sizeof(tz));gettimeofday(&amp;tv, &amp;tz); // call gettimeofday()time1=tv.tv_sec;tm1 = localtime(&amp;time1); FILE *f; f=fopen(&quot;rez.txt&quot;,&quot;w&quot;); fprintf(f,&quot;%04d.%02d.%02d %02d:%02d:%02d\\n&quot;,1900+tm1-&gt;tm_year,1+tm1-&gt;tm_mon,tm1-&gt;tm_mday,tm1-&gt;tm_hour,tm1-&gt;tm_min,tm1-&gt;tm_sec); fprintf(f,&quot;Diffrence between GMT(UTC) and local time=%d %s\\n&quot;,tz.tz_minuteswest,&quot;minutes&quot;); fprintf(f,&quot;Is Daylight now=%s\\n&quot;,tz.tz_dsttime?&quot;Yes&quot;:&quot;No&quot;); fclose(f); return 0;}","link":"/2016/09/15/transplant-project-to-windows-platform/"},{"title":"首次自动挡无陪练上路mark 20170416","text":"作为一个驾驶本已经有效期满换过一次，然而摇号遥遥无期购车无望，每次摸车平均间隔半年以上的“老司机”。我长久以来的梦想就是掌握熟练的驾驶技能，没时间解释的时候能随时发车。得益于发达的共享经济互联网思维，北京如今不仅马路上的自行车基本全是摩拜ofo小蓝车，汽车方面也出现类似的业务，比如今天体验的TOGO共享汽车。这类服务的目标用户当然是所有老司机，就像摩拜之于会骑车的人一样。但我属于另一种用户需求：练车技。 说起来轻松，然而想到要自己开车上路，第一次在没有陪练的情况下，还是蛮紧张的。和妈妈商量，等夜深了，路上车少的时候开吧！约定凌晨2点，上好闹钟睡觉。闹钟果然被摁了，然而好在妈妈3:50强行起来，而且我也克服重重阻力起床决定出发。TOGO的驾照认证已经通过，缴纳1500押金后出发去地图上标记的位置找车，天空的颜色几乎还没有变浅。 最初目标是来福士广场旁的一辆Smart，2座。然而在路边走了两个来回也没看到，意识到可能是停在地下车库了，我们不大清楚如何进入车库，于是决定去动用海运仓那里的Copper。话说Copper是我们家十分喜爱的车型。 我先骑摩拜去确认车在，然后在车旁启动App，它需要通过蓝牙与汽车连接打开车门。但这一步并不顺利，重试了两三次才成功，耗时将近十分钟。车门终于打开。 坐进驾驶室，首先感受到的是车内十分漂亮！然后看到脚下只有两个踏板，我慌了……Copper是自动挡的……完全没接触过，应该提前确认一下的。没办法，打开手机浏览器，现学。换挡杆上从前到后依次写着几个字母，踩死刹车，按住换挡杆按钮即可切换。 P (Parking) 停车档，或称泊车档R (Reverse) 倒档N (Neutral) 空档D (Drive)前进档，也称驱动档 好的，那么第一个任务：把车从路边开出来。这里的停车方式是路边最常见的首尾相接排队的样式，我们的车前后都有车，空间不大，所以让妈妈站路边指导。其实应该怎么出来，冷静想一下就知道：先向后尽量倒车，车头留出足够余量后，向左打死方向盘，前进，一把就能出来。然而由于当时十分紧张，不知怎么的就默认应该倒车出来😂 妈妈给的指示也不太对，卡在那里半天没出来…… 我和妈妈都比较急了，我一度想放弃。幸好走来一位老司机（或许就是后车的司机，有些害怕？），在他的正确指导下，比较顺利的出来啦。等妈妈上车，调头出发。 一路上也并不十分顺利，妈妈一直在旁边叨叨，说我开得太快，要开慢点思考路线——Exo Me??? 已经不快了，一直在被后车超越，我真的不能再减速了——要么问我打没打转向灯，我也没有好气，因为没有陪练时最大的挑战就是：提前规划路线这个任务要独自完成，要提前想好两个路口之外的路线，到路口怎么走，提前并线，走主路or辅路？如此压力的思考之下，哪里还有精力接受批评，于是我俩就又一路争吵，搞得十分紧张。 上图是全程线路，最后还是成功返航了。有两个地方因为出错而不得不绕远：1. 朝阳门桥要调头应该从桥上盘而不是桥下；2. 东直门桥从桥下盘应该走辅路。要是带个手机导航就好了。 回到起点附近准备停车，心里悬着的一块石头总算落地。停车又花了几分钟，这次车位比较宽裕，就不在意这些细节啦。 还车时间：05:39左右。全程不到1小时。TOGO会补偿途币抵消一部分费用，用来补偿缴纳的停车费。然而今天没有遇到有人收费，所以就算是优惠啦！ 总结 首尾相接路边停车位，出库时先考虑让车头出来。 对车前车后的距离感觉太差，出入库就不说了，红灯停车距离停车线得远了2米。 自动挡开习惯了比手动挡轻松很多！今天之后我真的喜欢自动挡了。脚上只管刹车油门，档位基本放在D，长时间停车切为P锁死。 最好有个手机App语音导航。 往家走时还早，但路过东直门立交桥时，看到桥下东侧辅路旁挺热闹——沿路排列着一溜简易布篷+白桌子，为马拉松准备的志愿者/保安/医务人员已就位。然而之后并没有目睹选手经过的情景，因为回家一觉睡到10点…… 下午全家带着果果牛牛散步，走了一大圈，大概4个小时。两只小狗真够厉害，并没有累得走不动。","link":"/2017/04/16/turning-into-old-driver-20170416/"},{"title":"家有二狗的日常","text":"基本全是妈妈拍的，配上她的对白，让人忍俊不禁。😆刚来如今的公司的时候，最初几天总是把公司名字错叫成“小牛牛”，没想到数月之后，家里真来了一位小牛牛，缘分呐！ 小时候可还没有这么俊俏😝","link":"/2016/08/05/two-doggy/"},{"title":"集成cpr库于Xcode-Cocos2d-x-iOS工程中","text":"简介cpr (C++ Requests: Curl for People)是一个封装了cURL的开源库，它把HTTP的几个Request (GET/PUT/POST/DELETE等)封装成了接口，用户需要Request的时候，不用再亲自与cURL打交道繁琐地拼装了。封装程度很高，令人兴奋！（找到这样一个不错的库，耗费了我两天时间…… 感谢这个列表A list of open source C++ libraries） Here’s a quick GET request: 12345678910#include &lt;cpr/cpr.h&gt;int main(int argc, char** argv) { auto r = cpr::Get(cpr::Url{&quot;https://api.github.com/repos/whoshuu/cpr/contributors&quot;}, cpr::Authentication{&quot;user&quot;, &quot;pass&quot;}, cpr::Parameters{{&quot;anon&quot;, &quot;true&quot;}, {&quot;key&quot;, &quot;value&quot;}}); r.status_code; // 200 r.header[&quot;content-type&quot;]; // application/json; charset=utf-8 r.text; // JSON text string} 集成然而ReadMe中推荐的，编译example project的教程，目标平台是Unix/Win（实测产出了正确运行的Unix executable文件），编译出的libcpr.a不是为iOS运行所用，教程无法套用在Xcode的iOS项目中。 因此我们要把cpr相关的源码、依赖的库加入Xcode项目中编译。 1. 增加相关源代码工程中建立如下目录结构 cpr/ include/ cpr/ …(1) curl/ …(2) json.hpp 其中，json.hpp 拷贝自 cpr-example/opt/json/src/json.hpp(1) 拷贝自两个来源 cpr-example/opt/cpr/include/cpr/全部文件(.h)和 cpr-example/opt/cpr/cpr/全部文件(.cpp)(2) 拷贝自 cocos2d-x-3/external/curl/include/ios/curl/全部源文件详见文末附录。 Xcode工程文件 Build Settings -&gt; Header Search Paths 增加一项：刚建立的cpr/include目录路径，比如”$(PROJECT_DIR)/cpr/include/“ 目的是让头文件能被找到。 2. 增加相关依赖库（.a）Xcode工程文件 Build Phases -&gt; Link Binary With Libraries 增加：cocos2d-x-3/external/curl/prebuilt/ios/下的三个.a文件，包括： libcrypto.alibcurl.alibssl.a 至此，项目编译链接应都通过，可以运行起来。 开发目前运行基本样例代码： 123auto response = cpr::Get(cpr::Url{&quot;https://httpbin.org/get&quot;});auto json = nlohmann::json::parse(response.text);cocos2d::log(&quot;%s&quot;, json.dump(4).c_str()); 待解决Warning: Libinfo call to mDNSResponder on main thread 运行第一句即报错，response中有错误信息 response.error.message:“SSL certificate problem: unable to get local issuer certificate”原因可能如此文所说，iPad上缺少CA证书。 解决方法：关闭验证。通过查看项目issue，发现作者已经提供了包装cURL设置是否启用验证的函数，设置cpr::Session即可： 1session.SetVerifySsl(cpr::VerifySsl(false)) 所以前述样例代码，要写得展开一些： 1234567891011121314cpr::Session session;session.SetVerifySsl(cpr::VerifySsl(false));auto url = cpr::Url{&quot;https://httpbin.org/get&quot;};session.SetUrl(url);auto response = session.Get(); // &quot;EXPECT_EQ&quot; requires google test. #include &lt;gtest/gtest.h&gt;// EXPECT_EQ(200, response.status_code);// EXPECT_EQ(ErrorCode::OK, response.error.code); auto json = nlohmann::json::parse(response.text);cocos2d::log(&quot;%s&quot;, json.dump(4).c_str()); 更多源码可参考cpr项目的test目录。 附录：源文件列表checklist：(1) api.hauth.cppauth.hbody.hcookies.cppcookies.hcpr.hcprtypes.cppcprtypes.hcurlholder.hdefines.hdigest.cppdigest.herror.cpperror.hlow_speed.hmax_redirects.hmultipart.cppmultipart.hparameters.cppparameters.hpayload.cpppayload.hproxies.cppproxies.hresponse.hsession.cppsession.hssl_options.cppssl_options.htimeout.cpptimeout.hutil.cpputil.h (2) curl.hcurlbuild-32.hcurlbuild-64.hcurlbuild.hcurlrules.hcurlver.heasy.hmprintf.hmulti.hstdcheaders.htypecheck-gcc.h","link":"/2017/05/10/use-cpr-in-Xcode-Cocos2d-x-iOS-project/"},{"title":"周末记 2017-05-14","text":"这个周末比较满，记录一下。周五晚太劳累，放弃开车，早睡早起。 周六13点多使用TOGO订到车，全家由银座停车场出发，途经望京，奶西村，定泗路，未来科技城，冠华苑…… 绕一大圈，共驾驶5小时出头，成功在白天复杂路况中平安到家，驾驶技能达到新高度。（未来科技城比较空旷，妈妈也练了几圈。我虽被老司机滴滴了两三次，但对自己仍算满意。） 晚饭呷哺外卖涮锅。因不想把健身拖到明天，21点抵达浩沙。卧推依旧70，上推105，斜板仰卧起坐*50。洗澡后焕然一新，回家安睡。 周日9点自然醒，全家遛两只狗狗，雍和宫水边至小街桥，和平里移动营业厅给妈妈手机SIM卡换为4G，办理两个月试用流量套餐。 15点全家乘15号线至顺义石门奥特莱斯。效率很高，我选中两件耐克T恤，爸妈分别选购一双NB世纪鞋，款式大气有活力。 明天周一，开始在小^2牛的最后一周。:)","link":"/2017/05/14/weekend-2017-05-14/"},{"title":"周末-2017-09-03","text":"本周开始8周16节的XDF托福课TF74001。水木校区，周六日的上午8-12点。学费2380，所谓大班，其实人数也就70左右，教室环境也很好。周六阅读课，首次试做，14道题错了2道半。回校理发，五道口与父母汇合，去北语穆斯林餐厅午餐。五道口南，华清嘉园小区对面取到一辆TOGO标致，这辆两厢车比比一般的三厢车还要小，座位放到最后都有些伸不开腿，好消息是油量十分充足。驾车去北坞并不远，之后造访西山林语，时间没有控制住，19点返程，20点多到家，没时间晚饭先去健身。 周日上午是写作课程，两天早起令人疲惫，午饭后午睡，18点与妈妈遛二狗，走到建国门与爸爸碰头，返程三人骑膜拜，狗狗站筐里，爸妈各有一手拽绳扶把，20:30到家，去银座吃萨利亚。然而晚上讨论问题时，由于时间较晚了，我急着休息，不欢而散…… 生活就像一盒巧克力。","link":"/2017/09/04/weekend-2017-09-03/"},{"title":"周末20181221-重生","text":"上周五晚，加班放弃了踢球，心想总算周末可以放松一下，盘算着明天要不要去图书馆，或是去保养长安。一进家门，感觉气氛有一丝压抑，妈妈并没有像往常一样忙来忙去，而是似乎有些疲惫地躺在床上，不过我也没多想。晚饭间，妈妈问了问我明天的安排，夸我长大了，还说我爸也日渐成熟让人放心。直到木讷的我准备去睡了，妈妈才欲言又止的讲出实情：她的体检结果不妙：拍肺部CT的大夫说建议超声复查，还提到了关键词“小细胞”，而“小细胞”肺癌目前是无法医治的。 如当头一记重击。不知那个痛苦的夜晚和周末是怎么熬过来的，早晨一睁眼便陷入绝望。看着家中的每个物件，都能想到它的由来与妈妈相关的故事，眼泪流了许多次，向阿爷姥姥祈祷着。悲伤，无力，万念俱灰，我的妈妈就要这么猝然离我而去？周六全家和狗狗去东坝郊野公园散心，周日妈妈陪我去保养长安，休息区在放映一部转世轮回相关的韩国电影。特定情况下，看什么都觉得是上天在向自己预示什么。之后去大姨家一聚。大姨家已得知情况，给予许多令人心宽的安慰。但妈妈一咳嗽，我的心还是揪起。 新的一周，妈妈的日程是周二去领CT诊断结果单，周五找大夫细看。我则赶上工作最忙的一周，每天忙到深夜甚至凌晨。周二中午，妈妈发来了结果单，肺部检查结论中有“间质性改变”、“局限性支扩”，这个结果里并没有提到肿瘤相关内容，可以说是比预期好得多。看来真的是上天开了一个玩笑呢？欢喜无限。周五上午陪妈妈去找大夫看诊断与开药，因为前一天加班到3点，所以我中午再去上班。赵大夫确认了诊断，病情并不严重，一部分病因是老人的肺部受如今污染空气的伤害。但不能放松警惕放任病情发展。开了药。 和妈妈拿了药，走出熙熙攘攘的医院，走在天朗气清，阳光暖暖的回家的路上，站在过街天桥上看环路上壮观的车流，如获新生。 p.s. 回家后收拾书包上班，走出院子帮一个粗心的狗主人找到她没有拴绳的欢脱狗，快走到地铁口，发现迎面走来一个熟悉的身影，定睛一看竟然是毕业3年半未见的郭同学，而且竟就在旁边的楼工作。着急上班并未详聊，有缘再会，下次要合影一张。 p.p.s. 已戒掉WOT。 周六傍晚，全家带三只小狗（大虎在延庆）去“农业博物馆”溜溜。所谓博物馆，那里其实是一个精致的公园，名字也是通过公园里的广播得知的。（也可能包括附近的建筑？但没有研究。）在附近生活了这么久，第一次听说这地方的存在。这个小公园的景致令人甚是喜爱！中央是地势较低的一座椭圆形的湖，以及环湖步道。据介绍，此湖原先是清代？的矿坑。湖中有人工水循环的水源涌出，因此附近没有结冰。看到冰上站立着两三只大天鹅？以及一群体型小的多的野鸭，一会儿在冰上整理，一会儿涌入湖水中，嘎嘎嘎叫个不停，十分自在。小狗们跑着跑着，也自己到湖边，小心翼翼地向湖面嗅探，虽然好奇但自知下去危险，就跑开继续玩。有两条路可跨湖而过，一条经过小石拱桥，一条经过左拐右拐的木栈道桥。牛牛起初上木桥时，趴在地上不敢走。湖周边是大片的草地树木，铺有曲直石路供人步行游览，沿途分布着数座描绘农业劳作情景的青铜雕像，人物刻画细致，充满劳动人民的力量之美。果果隔着矮灌木丛一时分辨不清那头大青牛是真是假，还想过去寒暄一番。此外还有一段小长廊。与湖边一样，此处也是面积并不很大但又精致又有层次感。正值冬日傍晚，人迹稀少，想象一下若能在此晒着太阳空坐一整天，必然是十分幸福。","link":"/2018/12/25/weekend-20181221-rebirth/"},{"title":"周记-2019-03-29","text":"周六，春暖花开之时，埋葬了吉利。托着盛放她小身躯的箱子走出小区时，意识到这是她第一次走出家门，悲痛难以自已。由于我们的忙碌和疏忽，没有及时发现她难受的真正原因，这个无比可爱的小生命，出生20天就猝然离去，这是我们心中永远的痛处。希望真的像妈妈梦到的那样，她幻化成可爱的小女孩，身着雅致的衣装，开启新的幸福。 本周工作日，周二周五各骑车上下班一次，骑到平安里转地铁，下班反之。全程近1小时，多出来的20分钟锻炼值得。 工作方面学习到通过tf.setBackend(“cpu”)禁用GPU，定位了手机端bug确实与GPU相关。 周末稍稍练习鼓&amp;吉他，《河流》初段的Em-G-Am-D循环很好听。","link":"/2020/03/30/weekly-2019-03-29/"},{"title":"work-log-201701","text":"01.22 Sun 文：RealMagicDual &amp; SDK Android migration 志明：Linux，300x300，单线程20ms，其中OpenCV读写5ms，GL纹理渲染15ms。（批复：考虑调研有显卡的服务器）。马良iOS在审核，Android已上线。 涛：Coder后台调起，模块拆分。 刚：SDK安卓编译 其他：马良英文素材还在做？评分提醒交互做完。 01.23 Mon 文：大屏实测，需换摄像头，BlockSize等参数调整。RealMagic重构。桌面投影效果还行 志明：Mac重新编译Mesa库，然而效果不佳。 时：算法优化 01.26 Thu 时：笔识别算法改好 01.25 委员会 01.26 周会 神笔：上周末提交一版本，没有解决崩溃。本周算法优化，识别笔，正在解决崩溃，今晚会提交新版本iOS，安卓年后提。 神笔云：mac上无GPU离屏渲染，然而效果不佳，正在研究使用GPU的程序，同时调研是否有支持GPU计算的服务器。 编程器：开会制定下一步计划。技术修改顺序：先优化现有例子，再做外部的优化和改版。两个时间点，2月20光辉上课需要提供，3月1日安卓。 大屏&amp;投影：大屏周日实验，摄像头不够清晰，参数需要修改，粒子更加聚拢。投影：晚上效果不错，基于双人对战的玩法，提出了粒子效果的修改建议，（今天）开始修改。 设计反馈：英文版：不缺什么了。钉崩溃的问题！安卓GIF颗粒感。 CEO反馈：xinianPM：整个项目催活，进度把控负责。&lt;–报告– （市场，销售，设计，开发 …）TPM：整个技术开发负责人。绩效考评参考项目负责人意见。 神笔2C（谜镜神笔，神笔故事）：张玲、志明。神笔2B：花姐、志明。大屏：花姐、魏文。编程器：光辉、陶璐。","link":"/2017/01/22/work-log-201701/"}],"tags":[{"name":"weekend","slug":"weekend","link":"/tags/weekend/"},{"name":"holiday","slug":"holiday","link":"/tags/holiday/"},{"name":"diary","slug":"diary","link":"/tags/diary/"},{"name":"Tianjin","slug":"Tianjin","link":"/tags/Tianjin/"},{"name":"Miyun","slug":"Miyun","link":"/tags/Miyun/"},{"name":"Huairou","slug":"Huairou","link":"/tags/Huairou/"},{"name":"driving","slug":"driving","link":"/tags/driving/"},{"name":"coding","slug":"coding","link":"/tags/coding/"},{"name":"iOS","slug":"iOS","link":"/tags/iOS/"},{"name":"AVFoundation","slug":"AVFoundation","link":"/tags/AVFoundation/"},{"name":"Fuzhou","slug":"Fuzhou","link":"/tags/Fuzhou/"},{"name":"tour","slug":"tour","link":"/tags/tour/"},{"name":"Xiamen","slug":"Xiamen","link":"/tags/Xiamen/"},{"name":"Android","slug":"Android","link":"/tags/Android/"},{"name":"IDE","slug":"IDE","link":"/tags/IDE/"},{"name":"eclipse","slug":"eclipse","link":"/tags/eclipse/"},{"name":"Android Studio","slug":"Android-Studio","link":"/tags/Android-Studio/"},{"name":"Dalian","slug":"Dalian","link":"/tags/Dalian/"},{"name":"computational geometry","slug":"computational-geometry","link":"/tags/computational-geometry/"},{"name":"convex hull","slug":"convex-hull","link":"/tags/convex-hull/"},{"name":"Processing","slug":"Processing","link":"/tags/Processing/"},{"name":"fitness","slug":"fitness","link":"/tags/fitness/"},{"name":"static library","slug":"static-library","link":"/tags/static-library/"},{"name":"Cocos2d-x","slug":"Cocos2d-x","link":"/tags/Cocos2d-x/"},{"name":"Xcode","slug":"Xcode","link":"/tags/Xcode/"},{"name":"c++","slug":"c","link":"/tags/c/"},{"name":"subclass","slug":"subclass","link":"/tags/subclass/"},{"name":"superclass","slug":"superclass","link":"/tags/superclass/"},{"name":"constructor","slug":"constructor","link":"/tags/constructor/"},{"name":"Cocos2d","slug":"Cocos2d","link":"/tags/Cocos2d/"},{"name":"cc.Label","slug":"cc-Label","link":"/tags/cc-Label/"},{"name":"lua","slug":"lua","link":"/tags/lua/"},{"name":"fnt","slug":"fnt","link":"/tags/fnt/"},{"name":"memorial day","slug":"memorial-day","link":"/tags/memorial-day/"},{"name":"reading","slug":"reading","link":"/tags/reading/"},{"name":"music","slug":"music","link":"/tags/music/"},{"name":"drums","slug":"drums","link":"/tags/drums/"},{"name":"piano","slug":"piano","link":"/tags/piano/"},{"name":"turtles","slug":"turtles","link":"/tags/turtles/"},{"name":"badminton","slug":"badminton","link":"/tags/badminton/"},{"name":"party","slug":"party","link":"/tags/party/"},{"name":"GuoGuo","slug":"GuoGuo","link":"/tags/GuoGuo/"},{"name":"drawing","slug":"drawing","link":"/tags/drawing/"},{"name":"football","slug":"football","link":"/tags/football/"},{"name":"NiuNiu","slug":"NiuNiu","link":"/tags/NiuNiu/"},{"name":"guitar","slug":"guitar","link":"/tags/guitar/"},{"name":"bike","slug":"bike","link":"/tags/bike/"},{"name":"movie","slug":"movie","link":"/tags/movie/"},{"name":"love","slug":"love","link":"/tags/love/"},{"name":"dogs","slug":"dogs","link":"/tags/dogs/"},{"name":"fire","slug":"fire","link":"/tags/fire/"},{"name":"photography","slug":"photography","link":"/tags/photography/"},{"name":"targets","slug":"targets","link":"/tags/targets/"},{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"},{"name":"Google Drive","slug":"Google-Drive","link":"/tags/Google-Drive/"},{"name":"MarkdownEditing","slug":"MarkdownEditing","link":"/tags/MarkdownEditing/"},{"name":"freeCodeCamp","slug":"freeCodeCamp","link":"/tags/freeCodeCamp/"},{"name":"codepen","slug":"codepen","link":"/tags/codepen/"},{"name":"Dairy","slug":"Dairy","link":"/tags/Dairy/"},{"name":"HackerRank","slug":"HackerRank","link":"/tags/HackerRank/"},{"name":"OJ","slug":"OJ","link":"/tags/OJ/"},{"name":"dynamic programming","slug":"dynamic-programming","link":"/tags/dynamic-programming/"},{"name":"python","slug":"python","link":"/tags/python/"},{"name":"nim game","slug":"nim-game","link":"/tags/nim-game/"},{"name":"Qiniu","slug":"Qiniu","link":"/tags/Qiniu/"},{"name":"GitHub","slug":"GitHub","link":"/tags/GitHub/"},{"name":"Langfang","slug":"Langfang","link":"/tags/Langfang/"},{"name":"Beijing","slug":"Beijing","link":"/tags/Beijing/"},{"name":"tutorial","slug":"tutorial","link":"/tags/tutorial/"},{"name":"HIKVISION","slug":"HIKVISION","link":"/tags/HIKVISION/"},{"name":"OpenCV","slug":"OpenCV","link":"/tags/OpenCV/"},{"name":"video","slug":"video","link":"/tags/video/"},{"name":"JavaScript","slug":"JavaScript","link":"/tags/JavaScript/"},{"name":"schedule","slug":"schedule","link":"/tags/schedule/"},{"name":"learning","slug":"learning","link":"/tags/learning/"},{"name":"multiple inheritance","slug":"multiple-inheritance","link":"/tags/multiple-inheritance/"},{"name":"Diamond of Death","slug":"Diamond-of-Death","link":"/tags/Diamond-of-Death/"},{"name":"priority queue","slug":"priority-queue","link":"/tags/priority-queue/"},{"name":"binary search","slug":"binary-search","link":"/tags/binary-search/"},{"name":"OpenGL","slug":"OpenGL","link":"/tags/OpenGL/"},{"name":"Mesa","slug":"Mesa","link":"/tags/Mesa/"},{"name":"Windows","slug":"Windows","link":"/tags/Windows/"},{"name":"pthread","slug":"pthread","link":"/tags/pthread/"},{"name":"VisualStudio","slug":"VisualStudio","link":"/tags/VisualStudio/"},{"name":"glsl","slug":"glsl","link":"/tags/glsl/"},{"name":"svn","slug":"svn","link":"/tags/svn/"},{"name":"Visual Studio","slug":"Visual-Studio","link":"/tags/Visual-Studio/"},{"name":"cpr","slug":"cpr","link":"/tags/cpr/"},{"name":"C++","slug":"C","link":"/tags/C/"},{"name":"TOEFL","slug":"TOEFL","link":"/tags/TOEFL/"},{"name":"Diary","slug":"Diary","link":"/tags/Diary/"},{"name":"weekly","slug":"weekly","link":"/tags/weekly/"},{"name":"JiLi","slug":"JiLi","link":"/tags/JiLi/"},{"name":"Yanqing","slug":"Yanqing","link":"/tags/Yanqing/"},{"name":"work log","slug":"work-log","link":"/tags/work-log/"}],"categories":[]}